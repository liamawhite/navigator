name: nightly

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual trigger

permissions:
  contents: write

jobs:
  cleanup:
    name: cleanup
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete old nightly releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get all nightly releases older than 3 days
          CUTOFF_DATE=$(date -d '3 days ago' --iso-8601)
          
          # List all releases and filter for nightly ones older than cutoff
          gh api repos/${{ github.repository }}/releases \
            --jq ".[] | select(.tag_name | test(\"nightly\")) | select(.created_at < \"${CUTOFF_DATE}\") | .id" \
            | while read release_id; do
              echo "Deleting old nightly release ID: $release_id"
              gh api -X DELETE repos/${{ github.repository }}/releases/$release_id || true
            done

  build:
    name: nightly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Nix
        uses: cachix/install-nix-action@v22
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate nightly version
        id: version
        run: |
          # Generate nightly version in format: v0.0.0-nightly.YYYYMMDD.SHORT_SHA
          SHORT_SHA=$(git rev-parse --short HEAD)
          NIGHTLY_VERSION="v0.0.0-nightly.$(date +%Y%m%d).${SHORT_SHA}"
          echo "version=$NIGHTLY_VERSION" >> $GITHUB_OUTPUT
          echo "Generated nightly version: $NIGHTLY_VERSION"

      - name: Build with GoReleaser
        run: nix develop --command goreleaser release --config .goreleaser.nightly.yaml --snapshot --clean --parallelism 2
        env:
          NIGHTLY_VERSION: ${{ steps.version.outputs.version }}

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create release using gh CLI with the archives created by GoReleaser
          gh release create ${{ steps.version.outputs.version }} \
            --title "üåô ${{ steps.version.outputs.version }}" \
            --notes "**‚ö†Ô∏è This is a nightly development build from the latest main branch.**

          Nightly builds are:
          - ‚úÖ Built automatically from the latest main branch  
          - ‚úÖ Contain the newest features and bug fixes
          - ‚ö†Ô∏è  May contain unstable or experimental code
          - ‚ö†Ô∏è  Not recommended for production use
          - üîÑ Released daily (older nightlies are automatically cleaned up)

          For stable releases, see: [Latest Stable Release](https://github.com/liamawhite/navigator/releases/latest)

          ## üöÄ Installation

          ### Quick Install Scripts

          #### Linux (x86_64)
          \`\`\`bash
          curl -L https://github.com/liamawhite/navigator/releases/download/${{ steps.version.outputs.version }}/navigator_Linux_x86_64.tar.gz | tar xz
          chmod +x navctl
          sudo mv navctl /usr/local/bin/
          \`\`\`

          #### Linux (ARM64)
          \`\`\`bash
          curl -L https://github.com/liamawhite/navigator/releases/download/${{ steps.version.outputs.version }}/navigator_Linux_arm64.tar.gz | tar xz
          chmod +x navctl
          sudo mv navctl /usr/local/bin/
          \`\`\`

          #### macOS (Intel)
          \`\`\`bash
          curl -L https://github.com/liamawhite/navigator/releases/download/${{ steps.version.outputs.version }}/navigator_Darwin_x86_64.tar.gz | tar xz
          chmod +x navctl
          sudo mv navctl /usr/local/bin/
          \`\`\`

          #### macOS (Apple Silicon)
          \`\`\`bash
          curl -L https://github.com/liamawhite/navigator/releases/download/${{ steps.version.outputs.version }}/navigator_Darwin_arm64.tar.gz | tar xz
          chmod +x navctl
          sudo mv navctl /usr/local/bin/
          \`\`\`

          #### Windows (PowerShell)
          \`\`\`powershell
          Invoke-WebRequest -Uri \"https://github.com/liamawhite/navigator/releases/download/${{ steps.version.outputs.version }}/navigator_Windows_x86_64.zip\" -OutFile \"navigator.zip\"
          Expand-Archive -Path \"navigator.zip\" -DestinationPath \".\"
          # Move navctl.exe to a directory in your PATH
          \`\`\`

          ### üîç Verify Installation
          \`\`\`bash
          navctl version
          # Should show version ${{ steps.version.outputs.version }} with today's date
          \`\`\`

          ### üõ°Ô∏è Verification with Checksums
          Download \`checksums.txt\` and verify your binary:
          \`\`\`bash
          # Linux/macOS
          sha256sum -c checksums.txt

          # Windows
          certutil -hashfile navctl.exe SHA256
          \`\`\`

          ---

          **üí° Tip**: To get notified of new nightly builds, watch this repository and select \"Releases only\" in your notification settings.

          Released by [GoReleaser](https://github.com/goreleaser/goreleaser) | üåô Nightly Build Pipeline" \
            --prerelease \
            dist/*.tar.gz dist/*.zip dist/checksums.txt

