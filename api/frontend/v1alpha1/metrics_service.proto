// Copyright 2025 Navigator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package navigator.frontend.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "types/v1alpha1/metrics_types.proto";
import "buf/validate/validate.proto";

option go_package = "github.com/liamawhite/navigator/pkg/api/frontend/v1alpha1";

// MetricsService provides APIs for service mesh metrics and observability.
service MetricsService {
  // GetServiceConnections returns inbound and outbound connections for a specific service.
  rpc GetServiceConnections(GetServiceConnectionsRequest) returns (GetServiceConnectionsResponse) {
    option (google.api.http) = {get: "/api/v1alpha1/metrics/service/{service_name}/connections"};
  }
}


// GetServiceConnectionsRequest specifies a service for connection metrics.
message GetServiceConnectionsRequest {
  option (buf.validate.message).cel = {
    id: "time_range_validation"
    message: "end_time must be after start_time"
    expression: "this.end_time > this.start_time"
  };

  // service_name is the name of the service to get connections for.
  string service_name = 1 [(buf.validate.field).required = true];
  
  // namespace is the Kubernetes namespace of the service.
  string namespace = 2 [(buf.validate.field).required = true];
  
  // start_time specifies the start time for the metrics query (required).
  // Must be in the past (before current time).
  google.protobuf.Timestamp start_time = 3 [(buf.validate.field).required = true, (buf.validate.field).timestamp.lt_now = true];
  
  // end_time specifies the end time for the metrics query (required).
  // Must be in the past (before current time) and after start_time.
  google.protobuf.Timestamp end_time = 4 [(buf.validate.field).required = true, (buf.validate.field).timestamp.lt_now = true];
}

// GetServiceConnectionsResponse contains inbound and outbound service connections.
message GetServiceConnectionsResponse {
  // aggregated_inbound contains properly aggregated metrics for services calling this service.
  repeated navigator.types.v1alpha1.AggregatedServicePairMetrics aggregated_inbound = 1;
  
  // aggregated_outbound contains properly aggregated metrics for services this service calls.
  repeated navigator.types.v1alpha1.AggregatedServicePairMetrics aggregated_outbound = 2;
  
  // detailed_inbound contains per-cluster breakdown for drill-down analysis.
  repeated navigator.types.v1alpha1.ServicePairMetrics detailed_inbound = 3;
  
  // detailed_outbound contains per-cluster breakdown for drill-down analysis.
  repeated navigator.types.v1alpha1.ServicePairMetrics detailed_outbound = 4;
  
  // timestamp is when these metrics were collected (RFC3339 format).
  string timestamp = 5;
  
  // clusters_queried lists the clusters that were queried for these metrics.
  repeated string clusters_queried = 6;
}

