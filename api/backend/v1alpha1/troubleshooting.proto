syntax = "proto3";

package navigator.backend.v1alpha1;

import "google/api/annotations.proto";
import "backend/v1alpha1/envoy_summary.proto";

option go_package = "github.com/liamawhite/navigator/pkg/api/backend/v1alpha1";

// TroubleshootingService provides APIs for troubleshooting and diagnostics.
// It enables retrieving proxy configuration and other debugging information.
service TroubleshootingService {
  // GetProxyConfig returns the proxy configuration for a specific service instance.
  rpc GetProxyConfig(GetProxyConfigRequest) returns (GetProxyConfigResponse) {
    option (google.api.http) = {get: "/api/v1alpha1/troubleshooting/services/{service_id}/instances/{instance_id}/proxy-config"};
  }
}

// GetProxyConfigRequest specifies which service instance to retrieve proxy config for.
message GetProxyConfigRequest {
  // service_id is the unique identifier of the service.
  // Format: namespace:service-name (e.g., "default:nginx-service")
  string service_id = 1;

  // instance_id is the unique identifier of the specific service instance.
  // Format: cluster_name:namespace:pod_name (e.g., "prod-west:default:nginx-abc123")
  string instance_id = 2;
}

// GetProxyConfigResponse contains the proxy configuration for the requested instance.
message GetProxyConfigResponse {
  // proxy_config contains the proxy configuration data.
  ProxyConfig proxy_config = 1;
}

// ProxyConfig represents the configuration of a proxy sidecar (e.g., Envoy).
message ProxyConfig {
  // proxy_type indicates the type of proxy (e.g., "envoy", "istio-proxy").
  string proxy_type = 1;

  // version is the version of the proxy software.
  string version = 2;

  // admin_port is the port number where the proxy admin interface is accessible.
  int32 admin_port = 3;

  // bootstrap contains the bootstrap configuration summary.
  BootstrapSummary bootstrap = 4;

  // listeners contains the listener configuration summaries.
  repeated ListenerSummary listeners = 5;

  // clusters contains the cluster configuration summaries.
  repeated ClusterSummary clusters = 6;

  // endpoints contains the endpoint configuration summaries.
  repeated EndpointSummary endpoints = 7;

  // routes contains the route configuration summaries.
  repeated RouteConfigSummary routes = 8;

  // raw_config_dump is the original raw configuration dump for debugging.
  string raw_config_dump = 10;
}

