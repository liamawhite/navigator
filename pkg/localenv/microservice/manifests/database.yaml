apiVersion: v1
kind: ServiceAccount
metadata:
  name: database
  namespace: microservice-demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  namespace: microservice-demo
  labels:
    app.kubernetes.io/name: database
    app.kubernetes.io/component: data-tier
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: database
        app.kubernetes.io/component: data-tier
    spec:
      serviceAccountName: database
      containers:
      - name: database
        image: ghcr.io/liamawhite/microservice:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: SERVICE_NAME
          value: "database"
        - name: PORT
          value: "8080"
        - name: TIMEOUT
          value: "30s"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: microservice-demo
  labels:
    app.kubernetes.io/name: database
    app.kubernetes.io/component: data-tier
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: database