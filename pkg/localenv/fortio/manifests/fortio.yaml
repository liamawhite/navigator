apiVersion: v1
kind: Pod
metadata:
  name: fortio-load
  namespace: load-generator
  labels:
    app: fortio-load
    app.kubernetes.io/name: fortio
    app.kubernetes.io/component: load-generator
    app.kubernetes.io/managed-by: navigator
spec:
  containers:
  - name: fortio
    image: fortio/fortio
    args:
    - load
    - -qps
    - "5"               # 5 requests per second
    - -t
    - "0"               # Run indefinitely (until stopped)
    - -c
    - "2"               # Use 2 concurrent connections
    - -keepalive        # Keep connections alive for efficiency
    - -logger-force-color=false  # Disable color for cleaner logs
    - -h2               # Use HTTP/2
    - http://istio-ingressgateway.istio-system.svc.cluster.local/microservices/proxy/backend:8080/proxy/database.database:8080
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "200m"
  restartPolicy: OnFailure
---
apiVersion: v1
kind: Pod
metadata:
  name: fortio-external
  namespace: load-generator
  labels:
    app: fortio-external
    app.kubernetes.io/name: fortio-external
    app.kubernetes.io/component: load-generator
    app.kubernetes.io/managed-by: navigator
spec:
  containers:
  - name: fortio
    image: fortio/fortio
    args:
    - load
    - -qps
    - "5"               # 5 requests per second
    - -t
    - "0"               # Run indefinitely (until stopped)
    - -c
    - "2"               # Use 2 concurrent connections
    - -keepalive        # Keep connections alive for efficiency
    - -logger-force-color=false  # Disable color for cleaner logs
    - -h2               # Use HTTP/2
    - http://istio-ingressgateway.istio-system.svc.cluster.local/microservices/proxy/backend:8080/proxy/example.com:80/microservices/proxy/backend:8080/proxy/database.database:8080
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "200m"
  restartPolicy: OnFailure
---
apiVersion: v1
kind: Pod
metadata:
  name: fortio-monolith
  namespace: load-generator
  labels:
    app: fortio-monolith
    app.kubernetes.io/name: fortio-monolith
    app.kubernetes.io/component: load-generator
    app.kubernetes.io/managed-by: navigator
spec:
  containers:
  - name: fortio
    image: fortio/fortio
    args:
    - load
    - -qps
    - "5"               # 5 requests per second
    - -t
    - "0"               # Run indefinitely (until stopped)
    - -c
    - "2"               # Use 2 concurrent connections
    - -keepalive        # Keep connections alive for efficiency
    - -logger-force-color=false  # Disable color for cleaner logs
    - -h2               # Use HTTP/2
    - http://istio-ingressgateway.istio-system.svc.cluster.local/monolith/proxy/database.database:8080
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "128Mi"
        cpu: "200m"
  restartPolicy: OnFailure
