// Copyright 2025 Navigator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: backend/v1alpha1/manager_service.proto

package v1alpha1

import (
	v1alpha1 "github.com/liamawhite/navigator/pkg/api/types/v1alpha1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConnectRequest represents messages sent from the edge process to the manager.
type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ConnectRequest_ClusterIdentification
	//	*ConnectRequest_ClusterState
	//	*ConnectRequest_ProxyConfigResponse
	//	*ConnectRequest_ServiceGraphMetricsResponse
	Message isConnectRequest_Message `protobuf_oneof:"message"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{0}
}

func (m *ConnectRequest) GetMessage() isConnectRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ConnectRequest) GetClusterIdentification() *ClusterIdentification {
	if x, ok := x.GetMessage().(*ConnectRequest_ClusterIdentification); ok {
		return x.ClusterIdentification
	}
	return nil
}

func (x *ConnectRequest) GetClusterState() *ClusterState {
	if x, ok := x.GetMessage().(*ConnectRequest_ClusterState); ok {
		return x.ClusterState
	}
	return nil
}

func (x *ConnectRequest) GetProxyConfigResponse() *ProxyConfigResponse {
	if x, ok := x.GetMessage().(*ConnectRequest_ProxyConfigResponse); ok {
		return x.ProxyConfigResponse
	}
	return nil
}

func (x *ConnectRequest) GetServiceGraphMetricsResponse() *ServiceGraphMetricsResponse {
	if x, ok := x.GetMessage().(*ConnectRequest_ServiceGraphMetricsResponse); ok {
		return x.ServiceGraphMetricsResponse
	}
	return nil
}

type isConnectRequest_Message interface {
	isConnectRequest_Message()
}

type ConnectRequest_ClusterIdentification struct {
	// cluster_identification is sent when the edge process connects to identify which cluster it manages.
	ClusterIdentification *ClusterIdentification `protobuf:"bytes,1,opt,name=cluster_identification,json=clusterIdentification,proto3,oneof"`
}

type ConnectRequest_ClusterState struct {
	// cluster_state contains the current state of the cluster.
	ClusterState *ClusterState `protobuf:"bytes,2,opt,name=cluster_state,json=clusterState,proto3,oneof"`
}

type ConnectRequest_ProxyConfigResponse struct {
	// proxy_config_response is sent in response to a proxy config request from the manager.
	ProxyConfigResponse *ProxyConfigResponse `protobuf:"bytes,3,opt,name=proxy_config_response,json=proxyConfigResponse,proto3,oneof"`
}

type ConnectRequest_ServiceGraphMetricsResponse struct {
	// service_graph_metrics_response is sent in response to a service graph metrics request from the manager.
	ServiceGraphMetricsResponse *ServiceGraphMetricsResponse `protobuf:"bytes,4,opt,name=service_graph_metrics_response,json=serviceGraphMetricsResponse,proto3,oneof"`
}

func (*ConnectRequest_ClusterIdentification) isConnectRequest_Message() {}

func (*ConnectRequest_ClusterState) isConnectRequest_Message() {}

func (*ConnectRequest_ProxyConfigResponse) isConnectRequest_Message() {}

func (*ConnectRequest_ServiceGraphMetricsResponse) isConnectRequest_Message() {}

// ConnectResponse represents messages sent from the manager to the edge process.
type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ConnectResponse_ConnectionAck
	//	*ConnectResponse_Error
	//	*ConnectResponse_ProxyConfigRequest
	//	*ConnectResponse_ServiceGraphMetricsRequest
	Message isConnectResponse_Message `protobuf_oneof:"message"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{1}
}

func (m *ConnectResponse) GetMessage() isConnectResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ConnectResponse) GetConnectionAck() *ConnectionAck {
	if x, ok := x.GetMessage().(*ConnectResponse_ConnectionAck); ok {
		return x.ConnectionAck
	}
	return nil
}

func (x *ConnectResponse) GetError() *ErrorMessage {
	if x, ok := x.GetMessage().(*ConnectResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ConnectResponse) GetProxyConfigRequest() *ProxyConfigRequest {
	if x, ok := x.GetMessage().(*ConnectResponse_ProxyConfigRequest); ok {
		return x.ProxyConfigRequest
	}
	return nil
}

func (x *ConnectResponse) GetServiceGraphMetricsRequest() *ServiceGraphMetricsRequest {
	if x, ok := x.GetMessage().(*ConnectResponse_ServiceGraphMetricsRequest); ok {
		return x.ServiceGraphMetricsRequest
	}
	return nil
}

type isConnectResponse_Message interface {
	isConnectResponse_Message()
}

type ConnectResponse_ConnectionAck struct {
	// connection_ack acknowledges the cluster identification and indicates if the connection is accepted.
	// once received, the edge process can start sending cluster state updates.
	ConnectionAck *ConnectionAck `protobuf:"bytes,1,opt,name=connection_ack,json=connectionAck,proto3,oneof"`
}

type ConnectResponse_Error struct {
	// error indicates an error condition.
	Error *ErrorMessage `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type ConnectResponse_ProxyConfigRequest struct {
	// proxy_config_request asks the edge process to provide proxy config for a specific pod.
	ProxyConfigRequest *ProxyConfigRequest `protobuf:"bytes,3,opt,name=proxy_config_request,json=proxyConfigRequest,proto3,oneof"`
}

type ConnectResponse_ServiceGraphMetricsRequest struct {
	// service_graph_metrics_request asks the edge process to provide service graph metrics.
	ServiceGraphMetricsRequest *ServiceGraphMetricsRequest `protobuf:"bytes,4,opt,name=service_graph_metrics_request,json=serviceGraphMetricsRequest,proto3,oneof"`
}

func (*ConnectResponse_ConnectionAck) isConnectResponse_Message() {}

func (*ConnectResponse_Error) isConnectResponse_Message() {}

func (*ConnectResponse_ProxyConfigRequest) isConnectResponse_Message() {}

func (*ConnectResponse_ServiceGraphMetricsRequest) isConnectResponse_Message() {}

// EdgeCapabilities describes what features an edge process supports.
type EdgeCapabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metrics_enabled indicates whether this edge process supports metrics collection.
	MetricsEnabled bool `protobuf:"varint,1,opt,name=metrics_enabled,json=metricsEnabled,proto3" json:"metrics_enabled,omitempty"`
}

func (x *EdgeCapabilities) Reset() {
	*x = EdgeCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeCapabilities) ProtoMessage() {}

func (x *EdgeCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeCapabilities.ProtoReflect.Descriptor instead.
func (*EdgeCapabilities) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{2}
}

func (x *EdgeCapabilities) GetMetricsEnabled() bool {
	if x != nil {
		return x.MetricsEnabled
	}
	return false
}

// ClusterIdentification is sent by the edge process to identify which cluster it manages.
type ClusterIdentification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a unique identifier for the cluster this edge manages.
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// capabilities describe what features this edge process supports.
	Capabilities *EdgeCapabilities `protobuf:"bytes,2,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
}

func (x *ClusterIdentification) Reset() {
	*x = ClusterIdentification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterIdentification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterIdentification) ProtoMessage() {}

func (x *ClusterIdentification) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterIdentification.ProtoReflect.Descriptor instead.
func (*ClusterIdentification) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{3}
}

func (x *ClusterIdentification) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ClusterIdentification) GetCapabilities() *EdgeCapabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

// ConnectionAck acknowledges cluster identification and indicates connection status.
type ConnectionAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// accepted indicates whether the connection was accepted.
	Accepted bool `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
}

func (x *ConnectionAck) Reset() {
	*x = ConnectionAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionAck) ProtoMessage() {}

func (x *ConnectionAck) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionAck.ProtoReflect.Descriptor instead.
func (*ConnectionAck) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{4}
}

func (x *ConnectionAck) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

// ErrorMessage indicates an error condition.
type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// error_code provides a machine-readable error identifier.
	ErrorCode string `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// error_message provides a human-readable error description.
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorMessage) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ErrorMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// ProxyConfigRequest is sent by the manager to request proxy configuration for a specific pod.
type ProxyConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// request_id is a unique identifier for this request, used for correlating the response.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// pod_namespace is the Kubernetes namespace of the pod.
	PodNamespace string `protobuf:"bytes,2,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	// pod_name is the Kubernetes name of the pod.
	PodName string `protobuf:"bytes,3,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
}

func (x *ProxyConfigRequest) Reset() {
	*x = ProxyConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfigRequest) ProtoMessage() {}

func (x *ProxyConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfigRequest.ProtoReflect.Descriptor instead.
func (*ProxyConfigRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{6}
}

func (x *ProxyConfigRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ProxyConfigRequest) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *ProxyConfigRequest) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

// ProxyConfigResponse is sent by the edge process in response to a proxy config request.
type ProxyConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// request_id matches the request_id from the corresponding ProxyConfigRequest.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Result:
	//
	//	*ProxyConfigResponse_ProxyConfig
	//	*ProxyConfigResponse_ErrorMessage
	Result isProxyConfigResponse_Result `protobuf_oneof:"result"`
}

func (x *ProxyConfigResponse) Reset() {
	*x = ProxyConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfigResponse) ProtoMessage() {}

func (x *ProxyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfigResponse.ProtoReflect.Descriptor instead.
func (*ProxyConfigResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{7}
}

func (x *ProxyConfigResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (m *ProxyConfigResponse) GetResult() isProxyConfigResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ProxyConfigResponse) GetProxyConfig() *v1alpha1.ProxyConfig {
	if x, ok := x.GetResult().(*ProxyConfigResponse_ProxyConfig); ok {
		return x.ProxyConfig
	}
	return nil
}

func (x *ProxyConfigResponse) GetErrorMessage() string {
	if x, ok := x.GetResult().(*ProxyConfigResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

type isProxyConfigResponse_Result interface {
	isProxyConfigResponse_Result()
}

type ProxyConfigResponse_ProxyConfig struct {
	// proxy_config contains the proxy configuration for the requested pod.
	ProxyConfig *v1alpha1.ProxyConfig `protobuf:"bytes,2,opt,name=proxy_config,json=proxyConfig,proto3,oneof"`
}

type ProxyConfigResponse_ErrorMessage struct {
	// error_message indicates that the proxy config could not be retrieved.
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ProxyConfigResponse_ProxyConfig) isProxyConfigResponse_Result() {}

func (*ProxyConfigResponse_ErrorMessage) isProxyConfigResponse_Result() {}

// ServiceGraphMetricsRequest is sent by the manager to request service graph metrics.
type ServiceGraphMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// request_id is a unique identifier for this request, used for correlating the response.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// filters specify which metrics to include based on source and destination attributes.
	Filters *v1alpha1.GraphMetricsFilters `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	// start_time specifies the start time for the metrics query (required).
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// end_time specifies the end time for the metrics query (required).
	EndTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *ServiceGraphMetricsRequest) Reset() {
	*x = ServiceGraphMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGraphMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGraphMetricsRequest) ProtoMessage() {}

func (x *ServiceGraphMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGraphMetricsRequest.ProtoReflect.Descriptor instead.
func (*ServiceGraphMetricsRequest) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{8}
}

func (x *ServiceGraphMetricsRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ServiceGraphMetricsRequest) GetFilters() *v1alpha1.GraphMetricsFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ServiceGraphMetricsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ServiceGraphMetricsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// ServiceGraphMetricsResponse is sent by the edge process in response to a service graph metrics request.
type ServiceGraphMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// request_id matches the request_id from the corresponding ServiceGraphMetricsRequest.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Types that are assignable to Result:
	//
	//	*ServiceGraphMetricsResponse_ServiceGraphMetrics
	//	*ServiceGraphMetricsResponse_ErrorMessage
	Result isServiceGraphMetricsResponse_Result `protobuf_oneof:"result"`
}

func (x *ServiceGraphMetricsResponse) Reset() {
	*x = ServiceGraphMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceGraphMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceGraphMetricsResponse) ProtoMessage() {}

func (x *ServiceGraphMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backend_v1alpha1_manager_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceGraphMetricsResponse.ProtoReflect.Descriptor instead.
func (*ServiceGraphMetricsResponse) Descriptor() ([]byte, []int) {
	return file_backend_v1alpha1_manager_service_proto_rawDescGZIP(), []int{9}
}

func (x *ServiceGraphMetricsResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (m *ServiceGraphMetricsResponse) GetResult() isServiceGraphMetricsResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ServiceGraphMetricsResponse) GetServiceGraphMetrics() *v1alpha1.ServiceGraphMetrics {
	if x, ok := x.GetResult().(*ServiceGraphMetricsResponse_ServiceGraphMetrics); ok {
		return x.ServiceGraphMetrics
	}
	return nil
}

func (x *ServiceGraphMetricsResponse) GetErrorMessage() string {
	if x, ok := x.GetResult().(*ServiceGraphMetricsResponse_ErrorMessage); ok {
		return x.ErrorMessage
	}
	return ""
}

type isServiceGraphMetricsResponse_Result interface {
	isServiceGraphMetricsResponse_Result()
}

type ServiceGraphMetricsResponse_ServiceGraphMetrics struct {
	// service_graph_metrics contains the service-to-service metrics data.
	ServiceGraphMetrics *v1alpha1.ServiceGraphMetrics `protobuf:"bytes,2,opt,name=service_graph_metrics,json=serviceGraphMetrics,proto3,oneof"`
}

type ServiceGraphMetricsResponse_ErrorMessage struct {
	// error_message indicates that the service graph metrics could not be retrieved.
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ServiceGraphMetricsResponse_ServiceGraphMetrics) isServiceGraphMetricsResponse_Result() {}

func (*ServiceGraphMetricsResponse_ErrorMessage) isServiceGraphMetricsResponse_Result() {}

var File_backend_v1alpha1_manager_service_proto protoreflect.FileDescriptor

var file_backend_v1alpha1_manager_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x1a, 0x23, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xbf, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a, 0x16, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x4f, 0x0a, 0x0d, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x65, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x1e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x93, 0x03, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x40, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x62, 0x0a, 0x14,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6e, 0x61, 0x76,
	0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x7b, 0x0a, 0x1d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x1a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x10, 0x45, 0x64, 0x67, 0x65,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x50,
	0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0x2b, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x22, 0x52, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x73, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4a, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf6, 0x01, 0x0a, 0x1a, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x63, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x25, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x78, 0x0a, 0x0e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x2a, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6c, 0x69, 0x61, 0x6d, 0x61, 0x77, 0x68, 0x69, 0x74, 0x65, 0x2f, 0x6e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_backend_v1alpha1_manager_service_proto_rawDescOnce sync.Once
	file_backend_v1alpha1_manager_service_proto_rawDescData = file_backend_v1alpha1_manager_service_proto_rawDesc
)

func file_backend_v1alpha1_manager_service_proto_rawDescGZIP() []byte {
	file_backend_v1alpha1_manager_service_proto_rawDescOnce.Do(func() {
		file_backend_v1alpha1_manager_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_backend_v1alpha1_manager_service_proto_rawDescData)
	})
	return file_backend_v1alpha1_manager_service_proto_rawDescData
}

var file_backend_v1alpha1_manager_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_backend_v1alpha1_manager_service_proto_goTypes = []any{
	(*ConnectRequest)(nil),               // 0: navigator.backend.v1alpha1.ConnectRequest
	(*ConnectResponse)(nil),              // 1: navigator.backend.v1alpha1.ConnectResponse
	(*EdgeCapabilities)(nil),             // 2: navigator.backend.v1alpha1.EdgeCapabilities
	(*ClusterIdentification)(nil),        // 3: navigator.backend.v1alpha1.ClusterIdentification
	(*ConnectionAck)(nil),                // 4: navigator.backend.v1alpha1.ConnectionAck
	(*ErrorMessage)(nil),                 // 5: navigator.backend.v1alpha1.ErrorMessage
	(*ProxyConfigRequest)(nil),           // 6: navigator.backend.v1alpha1.ProxyConfigRequest
	(*ProxyConfigResponse)(nil),          // 7: navigator.backend.v1alpha1.ProxyConfigResponse
	(*ServiceGraphMetricsRequest)(nil),   // 8: navigator.backend.v1alpha1.ServiceGraphMetricsRequest
	(*ServiceGraphMetricsResponse)(nil),  // 9: navigator.backend.v1alpha1.ServiceGraphMetricsResponse
	(*ClusterState)(nil),                 // 10: navigator.backend.v1alpha1.ClusterState
	(*v1alpha1.ProxyConfig)(nil),         // 11: navigator.types.v1alpha1.ProxyConfig
	(*v1alpha1.GraphMetricsFilters)(nil), // 12: navigator.types.v1alpha1.GraphMetricsFilters
	(*timestamppb.Timestamp)(nil),        // 13: google.protobuf.Timestamp
	(*v1alpha1.ServiceGraphMetrics)(nil), // 14: navigator.types.v1alpha1.ServiceGraphMetrics
}
var file_backend_v1alpha1_manager_service_proto_depIdxs = []int32{
	3,  // 0: navigator.backend.v1alpha1.ConnectRequest.cluster_identification:type_name -> navigator.backend.v1alpha1.ClusterIdentification
	10, // 1: navigator.backend.v1alpha1.ConnectRequest.cluster_state:type_name -> navigator.backend.v1alpha1.ClusterState
	7,  // 2: navigator.backend.v1alpha1.ConnectRequest.proxy_config_response:type_name -> navigator.backend.v1alpha1.ProxyConfigResponse
	9,  // 3: navigator.backend.v1alpha1.ConnectRequest.service_graph_metrics_response:type_name -> navigator.backend.v1alpha1.ServiceGraphMetricsResponse
	4,  // 4: navigator.backend.v1alpha1.ConnectResponse.connection_ack:type_name -> navigator.backend.v1alpha1.ConnectionAck
	5,  // 5: navigator.backend.v1alpha1.ConnectResponse.error:type_name -> navigator.backend.v1alpha1.ErrorMessage
	6,  // 6: navigator.backend.v1alpha1.ConnectResponse.proxy_config_request:type_name -> navigator.backend.v1alpha1.ProxyConfigRequest
	8,  // 7: navigator.backend.v1alpha1.ConnectResponse.service_graph_metrics_request:type_name -> navigator.backend.v1alpha1.ServiceGraphMetricsRequest
	2,  // 8: navigator.backend.v1alpha1.ClusterIdentification.capabilities:type_name -> navigator.backend.v1alpha1.EdgeCapabilities
	11, // 9: navigator.backend.v1alpha1.ProxyConfigResponse.proxy_config:type_name -> navigator.types.v1alpha1.ProxyConfig
	12, // 10: navigator.backend.v1alpha1.ServiceGraphMetricsRequest.filters:type_name -> navigator.types.v1alpha1.GraphMetricsFilters
	13, // 11: navigator.backend.v1alpha1.ServiceGraphMetricsRequest.start_time:type_name -> google.protobuf.Timestamp
	13, // 12: navigator.backend.v1alpha1.ServiceGraphMetricsRequest.end_time:type_name -> google.protobuf.Timestamp
	14, // 13: navigator.backend.v1alpha1.ServiceGraphMetricsResponse.service_graph_metrics:type_name -> navigator.types.v1alpha1.ServiceGraphMetrics
	0,  // 14: navigator.backend.v1alpha1.ManagerService.Connect:input_type -> navigator.backend.v1alpha1.ConnectRequest
	1,  // 15: navigator.backend.v1alpha1.ManagerService.Connect:output_type -> navigator.backend.v1alpha1.ConnectResponse
	15, // [15:16] is the sub-list for method output_type
	14, // [14:15] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_backend_v1alpha1_manager_service_proto_init() }
func file_backend_v1alpha1_manager_service_proto_init() {
	if File_backend_v1alpha1_manager_service_proto != nil {
		return
	}
	file_backend_v1alpha1_clusterstate_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_backend_v1alpha1_manager_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*EdgeCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ClusterIdentification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ConnectionAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ProxyConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceGraphMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_backend_v1alpha1_manager_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ServiceGraphMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_backend_v1alpha1_manager_service_proto_msgTypes[0].OneofWrappers = []any{
		(*ConnectRequest_ClusterIdentification)(nil),
		(*ConnectRequest_ClusterState)(nil),
		(*ConnectRequest_ProxyConfigResponse)(nil),
		(*ConnectRequest_ServiceGraphMetricsResponse)(nil),
	}
	file_backend_v1alpha1_manager_service_proto_msgTypes[1].OneofWrappers = []any{
		(*ConnectResponse_ConnectionAck)(nil),
		(*ConnectResponse_Error)(nil),
		(*ConnectResponse_ProxyConfigRequest)(nil),
		(*ConnectResponse_ServiceGraphMetricsRequest)(nil),
	}
	file_backend_v1alpha1_manager_service_proto_msgTypes[7].OneofWrappers = []any{
		(*ProxyConfigResponse_ProxyConfig)(nil),
		(*ProxyConfigResponse_ErrorMessage)(nil),
	}
	file_backend_v1alpha1_manager_service_proto_msgTypes[9].OneofWrappers = []any{
		(*ServiceGraphMetricsResponse_ServiceGraphMetrics)(nil),
		(*ServiceGraphMetricsResponse_ErrorMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backend_v1alpha1_manager_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backend_v1alpha1_manager_service_proto_goTypes,
		DependencyIndexes: file_backend_v1alpha1_manager_service_proto_depIdxs,
		MessageInfos:      file_backend_v1alpha1_manager_service_proto_msgTypes,
	}.Build()
	File_backend_v1alpha1_manager_service_proto = out.File
	file_backend_v1alpha1_manager_service_proto_rawDesc = nil
	file_backend_v1alpha1_manager_service_proto_goTypes = nil
	file_backend_v1alpha1_manager_service_proto_depIdxs = nil
}
