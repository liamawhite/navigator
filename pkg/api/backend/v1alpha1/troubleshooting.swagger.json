{
  "swagger": "2.0",
  "info": {
    "title": "backend/v1alpha1/troubleshooting.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TroubleshootingService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1alpha1/troubleshooting/services/{serviceId}/instances/{instanceId}/proxy-config": {
      "get": {
        "summary": "GetProxyConfig returns the proxy configuration for a specific service instance.",
        "operationId": "TroubleshootingService_GetProxyConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GetProxyConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "serviceId",
            "description": "service_id is the unique identifier of the service.\nFormat: namespace:service-name (e.g., \"default:nginx-service\")",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceId",
            "description": "instance_id is the unique identifier of the specific service instance.\nFormat: cluster_name:namespace:pod_name (e.g., \"prod-west:default:nginx-abc123\")",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TroubleshootingService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1alpha1AccessLogInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the access log filter name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        },
        "filterType": {
          "type": "string",
          "title": "filter_type is the type of filter applied"
        }
      },
      "title": "AccessLogInfo contains access log configuration"
    },
    "v1alpha1BootstrapSummary": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/v1alpha1NodeSummary",
          "title": "node contains information about the Envoy node"
        },
        "staticResourcesVersion": {
          "type": "string",
          "title": "static_resources_version indicates the version of static resources"
        },
        "dynamicResourcesConfig": {
          "$ref": "#/definitions/v1alpha1DynamicConfigInfo",
          "title": "dynamic_resources_config contains configuration for dynamic resources"
        },
        "adminPort": {
          "type": "integer",
          "format": "int64",
          "title": "admin_port is the port of the Envoy admin interface"
        },
        "adminAddress": {
          "type": "string",
          "title": "admin_address is the address of the Envoy admin interface"
        },
        "clusterManager": {
          "$ref": "#/definitions/v1alpha1ClusterManagerInfo",
          "title": "cluster_manager contains cluster manager configuration"
        }
      },
      "title": "BootstrapSummary contains essential bootstrap configuration information"
    },
    "v1alpha1CircuitBreakersInfo": {
      "type": "object",
      "properties": {
        "thresholds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ThresholdInfo"
          },
          "title": "thresholds contains circuit breaker thresholds"
        },
        "perHostThresholds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ThresholdInfo"
          },
          "title": "per_host_thresholds contains per-host thresholds"
        }
      },
      "title": "CircuitBreakersInfo contains circuit breakers information"
    },
    "v1alpha1ClusterFilterInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the filter name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        }
      },
      "title": "ClusterFilterInfo contains cluster filter information"
    },
    "v1alpha1ClusterManagerInfo": {
      "type": "object",
      "properties": {
        "localClusterName": {
          "type": "string",
          "title": "local_cluster_name is the name of the local cluster"
        },
        "outlierDetection": {
          "type": "boolean",
          "title": "outlier_detection indicates if outlier detection is enabled"
        },
        "upstreamBindConfig": {
          "type": "boolean",
          "title": "upstream_bind_config indicates if upstream bind config is present"
        },
        "loadStatsConfig": {
          "type": "boolean",
          "title": "load_stats_config indicates if load stats config is present"
        },
        "connectTimeout": {
          "type": "string",
          "title": "connect_timeout is the connection timeout"
        },
        "perConnectionBufferLimitBytes": {
          "type": "integer",
          "format": "int64",
          "title": "per_connection_buffer_limit_bytes is the buffer limit per connection"
        }
      },
      "title": "ClusterManagerInfo contains cluster manager configuration"
    },
    "v1alpha1ClusterSpecifierPluginInfo": {
      "type": "object",
      "properties": {
        "extension": {
          "$ref": "#/definitions/v1alpha1ExtensionInfo",
          "title": "extension contains extension information"
        },
        "isOptional": {
          "type": "boolean",
          "title": "is_optional indicates if the plugin is optional"
        }
      },
      "title": "ClusterSpecifierPluginInfo contains cluster specifier plugin information"
    },
    "v1alpha1ClusterSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the cluster name"
        },
        "type": {
          "type": "string",
          "title": "type is the cluster discovery type"
        },
        "connectTimeout": {
          "type": "string",
          "title": "connect_timeout is the connection timeout"
        },
        "loadAssignment": {
          "$ref": "#/definitions/v1alpha1EndpointConfigInfo",
          "title": "load_assignment contains endpoint configuration"
        },
        "loadBalancingPolicy": {
          "type": "string",
          "title": "load_balancing_policy is the load balancing policy"
        },
        "healthChecks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HealthCheckInfo"
          },
          "title": "health_checks contains health check configuration"
        },
        "maxRequestsPerConnection": {
          "type": "integer",
          "format": "int64",
          "title": "max_requests_per_connection is the maximum requests per connection"
        },
        "http2MaxRequests": {
          "type": "integer",
          "format": "int64",
          "title": "http2_max_requests is the HTTP/2 maximum requests"
        },
        "http2MaxRequestsPerConnection": {
          "type": "integer",
          "format": "int64",
          "title": "http2_max_requests_per_connection is the HTTP/2 maximum requests per connection"
        },
        "http2MaxConcurrentStreams": {
          "type": "integer",
          "format": "int64",
          "title": "http2_max_concurrent_streams is the HTTP/2 maximum concurrent streams"
        },
        "http2InitialStreamWindowSize": {
          "type": "integer",
          "format": "int64",
          "title": "http2_initial_stream_window_size is the HTTP/2 initial stream window size"
        },
        "http2InitialConnectionWindowSize": {
          "type": "integer",
          "format": "int64",
          "title": "http2_initial_connection_window_size is the HTTP/2 initial connection window size"
        },
        "http2MaxFrameSize": {
          "type": "integer",
          "format": "int64",
          "title": "http2_max_frame_size is the HTTP/2 maximum frame size"
        },
        "http2EnableKeepalive": {
          "type": "boolean",
          "title": "http2_enable_keepalive indicates if HTTP/2 keepalive is enabled"
        },
        "circuitBreakers": {
          "$ref": "#/definitions/v1alpha1CircuitBreakersInfo",
          "title": "circuit_breakers contains circuit breaker configuration"
        },
        "tlsContext": {
          "$ref": "#/definitions/v1alpha1TLSContextInfo",
          "title": "tls_context contains TLS configuration"
        },
        "commonHttpProtocolOptions": {
          "$ref": "#/definitions/v1alpha1CommonHttpProtocolOptionsInfo",
          "title": "common_http_protocol_options contains common HTTP protocol options"
        },
        "altStatName": {
          "type": "string",
          "title": "alt_stat_name is the alternative statistics name"
        },
        "perConnectionBufferLimitBytes": {
          "type": "integer",
          "format": "int64",
          "title": "per_connection_buffer_limit_bytes is the buffer limit per connection"
        },
        "lbPolicy": {
          "type": "string",
          "title": "lb_policy is the load balancing policy"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HostInfo"
          },
          "title": "hosts contains static host configuration"
        },
        "drainConnectionsOnHostRemoval": {
          "type": "boolean",
          "title": "drain_connections_on_host_removal indicates if connections are drained on host removal"
        },
        "warmingHosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HostInfo"
          },
          "title": "warming_hosts contains warming host information"
        },
        "outlierDetection": {
          "$ref": "#/definitions/v1alpha1OutlierDetectionInfo",
          "title": "outlier_detection contains outlier detection configuration"
        },
        "cleanupInterval": {
          "type": "string",
          "title": "cleanup_interval is the cleanup interval"
        },
        "upstreamBindConfig": {
          "$ref": "#/definitions/v1alpha1UpstreamBindConfigInfo",
          "title": "upstream_bind_config contains upstream bind configuration"
        },
        "lbSubsetConfig": {
          "$ref": "#/definitions/v1alpha1LbSubsetConfigInfo",
          "title": "lb_subset_config contains load balancing subset configuration"
        },
        "ringHashLbConfig": {
          "$ref": "#/definitions/v1alpha1RingHashLbConfigInfo",
          "title": "ring_hash_lb_config contains ring hash load balancing configuration"
        },
        "maglevLbConfig": {
          "$ref": "#/definitions/v1alpha1MaglevLbConfigInfo",
          "title": "maglev_lb_config contains Maglev load balancing configuration"
        },
        "originalDstLbConfig": {
          "$ref": "#/definitions/v1alpha1OriginalDstLbConfigInfo",
          "title": "original_dst_lb_config contains original destination load balancing configuration"
        },
        "leastRequestLbConfig": {
          "$ref": "#/definitions/v1alpha1LeastRequestLbConfigInfo",
          "title": "least_request_lb_config contains least request load balancing configuration"
        },
        "commonLbConfig": {
          "$ref": "#/definitions/v1alpha1CommonLbConfigInfo",
          "title": "common_lb_config contains common load balancing configuration"
        },
        "transportSocket": {
          "$ref": "#/definitions/v1alpha1TransportSocketInfo",
          "title": "transport_socket contains transport socket configuration"
        },
        "protocolSelection": {
          "type": "string",
          "title": "protocol_selection is the protocol selection policy"
        },
        "upstreamConnectionOptions": {
          "$ref": "#/definitions/v1alpha1UpstreamConnectionOptionsInfo",
          "title": "upstream_connection_options contains upstream connection options"
        },
        "closeConnectionsOnHostSetChange": {
          "type": "boolean",
          "title": "close_connections_on_host_set_change indicates if connections are closed on host set change"
        },
        "ignoreHealthOnHostRemoval": {
          "type": "boolean",
          "title": "ignore_health_on_host_removal indicates if health is ignored on host removal"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ClusterFilterInfo"
          },
          "title": "filters contains cluster filters"
        },
        "lrsServer": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "lrs_server contains LRS server configuration"
        },
        "dnsLookupFamily": {
          "type": "string",
          "title": "dns_lookup_family is the DNS lookup family"
        },
        "dnsResolvers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DnsResolverInfo"
          },
          "title": "dns_resolvers contains DNS resolver configuration"
        },
        "useTcpForDnsLookups": {
          "type": "boolean",
          "title": "use_tcp_for_dns_lookups indicates if TCP is used for DNS lookups"
        },
        "dnsFailureRefreshRate": {
          "$ref": "#/definitions/v1alpha1RefreshRateInfo",
          "title": "dns_failure_refresh_rate contains DNS failure refresh rate"
        },
        "respectDnsTtl": {
          "type": "boolean",
          "title": "respect_dns_ttl indicates if DNS TTL is respected"
        },
        "dnsRefreshRate": {
          "type": "string",
          "title": "dns_refresh_rate is the DNS refresh rate"
        },
        "dnsQueryTimeout": {
          "type": "string",
          "title": "dns_query_timeout is the DNS query timeout"
        },
        "edsClusterConfig": {
          "$ref": "#/definitions/v1alpha1EdsClusterConfigInfo",
          "title": "eds_cluster_config contains EDS cluster configuration"
        }
      },
      "title": "ClusterSummary contains essential cluster configuration information"
    },
    "v1alpha1CommonHttpProtocolOptionsInfo": {
      "type": "object",
      "properties": {
        "idleTimeout": {
          "type": "string",
          "title": "idle_timeout is the idle timeout"
        },
        "maxConnectionDuration": {
          "type": "string",
          "title": "max_connection_duration is the maximum connection duration"
        },
        "maxHeadersCount": {
          "type": "integer",
          "format": "int64",
          "title": "max_headers_count is the maximum headers count"
        },
        "maxStreamDuration": {
          "type": "string",
          "title": "max_stream_duration is the maximum stream duration"
        },
        "headersWithUnderscoresAction": {
          "type": "string",
          "title": "headers_with_underscores_action indicates how headers with underscores are handled"
        },
        "maxRequestsPerConnection": {
          "type": "integer",
          "format": "int64",
          "title": "max_requests_per_connection is the maximum requests per connection"
        }
      },
      "title": "CommonHttpProtocolOptionsInfo contains common HTTP protocol options information"
    },
    "v1alpha1CommonLbConfigInfo": {
      "type": "object",
      "properties": {
        "healthyPanicThreshold": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "healthy_panic_threshold contains healthy panic threshold"
        },
        "zoneAwareLbConfig": {
          "$ref": "#/definitions/v1alpha1ZoneAwareLbConfigInfo",
          "title": "zone_aware_lb_config contains zone-aware load balancing configuration"
        },
        "localityLbConfig": {
          "$ref": "#/definitions/v1alpha1LocalityLbConfigInfo",
          "title": "locality_lb_config contains locality load balancing configuration"
        },
        "updateMergeWindow": {
          "type": "string",
          "title": "update_merge_window is the update merge window"
        },
        "ignoreNewHostsUntilFirstHc": {
          "type": "boolean",
          "title": "ignore_new_hosts_until_first_hc indicates if new hosts are ignored until first health check"
        },
        "closeConnectionsOnHostSetChange": {
          "type": "boolean",
          "title": "close_connections_on_host_set_change indicates if connections are closed on host set change"
        },
        "consistentHashingLbConfig": {
          "$ref": "#/definitions/v1alpha1ConsistentHashingLbConfigInfo",
          "title": "consistent_hashing_lb_config contains consistent hashing load balancing configuration"
        }
      },
      "title": "CommonLbConfigInfo contains common load balancing configuration information"
    },
    "v1alpha1ConfigSourceInfo": {
      "type": "object",
      "properties": {
        "configSourceSpecifier": {
          "type": "string",
          "title": "config_source_specifier indicates the type of config source"
        },
        "transportApiVersion": {
          "type": "string",
          "title": "transport_api_version is the transport API version"
        },
        "apiType": {
          "type": "string",
          "title": "api_type indicates the API type (REST, gRPC, etc.)"
        }
      },
      "title": "ConfigSourceInfo contains information about a configuration source"
    },
    "v1alpha1ConsistentHashingLbConfigInfo": {
      "type": "object",
      "properties": {
        "useHostnameForHashing": {
          "type": "boolean",
          "title": "use_hostname_for_hashing indicates if hostname is used for hashing"
        },
        "hashBalanceFactor": {
          "type": "integer",
          "format": "int64",
          "title": "hash_balance_factor is the hash balance factor"
        }
      },
      "title": "ConsistentHashingLbConfigInfo contains consistent hashing load balancing configuration information"
    },
    "v1alpha1CorsInfo": {
      "type": "object",
      "properties": {
        "allowOrigin": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "allow_origin contains allowed origins"
        },
        "allowOriginStringMatch": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "allow_origin_string_match contains allowed origin string matches"
        },
        "allowMethods": {
          "type": "string",
          "title": "allow_methods contains allowed methods"
        },
        "allowHeaders": {
          "type": "string",
          "title": "allow_headers contains allowed headers"
        },
        "exposeHeaders": {
          "type": "string",
          "title": "expose_headers contains exposed headers"
        },
        "maxAge": {
          "type": "string",
          "title": "max_age is the maximum age"
        },
        "allowCredentials": {
          "type": "boolean",
          "title": "allow_credentials indicates if credentials are allowed"
        },
        "enabledSpecifier": {
          "type": "string",
          "title": "enabled_specifier indicates how CORS is enabled"
        },
        "shadowEnabled": {
          "type": "boolean",
          "title": "shadow_enabled indicates if shadow mode is enabled"
        }
      },
      "title": "CorsInfo contains CORS information"
    },
    "v1alpha1CustomHealthCheckInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the health check name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        }
      },
      "title": "CustomHealthCheckInfo contains custom health check information"
    },
    "v1alpha1CustomTagInfo": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "title": "tag is the tag name"
        },
        "requestHeader": {
          "type": "string",
          "title": "request_header is the request header to use"
        },
        "responseHeader": {
          "type": "string",
          "title": "response_header is the response header to use"
        },
        "environment": {
          "type": "string",
          "title": "environment is the environment variable to use"
        },
        "literal": {
          "type": "string",
          "title": "literal is the literal value to use"
        },
        "requestHeaderToAdd": {
          "type": "string",
          "title": "request_header_to_add is the request header to add"
        },
        "responseHeaderToAdd": {
          "type": "string",
          "title": "response_header_to_add is the response header to add"
        }
      },
      "title": "CustomTagInfo contains custom tag information"
    },
    "v1alpha1DecoratorInfo": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "title": "operation is the operation name"
        },
        "propagate": {
          "type": "boolean",
          "title": "propagate indicates if the decorator should propagate"
        }
      },
      "title": "DecoratorInfo contains decorator information"
    },
    "v1alpha1DnsResolverInfo": {
      "type": "object",
      "properties": {
        "socketAddress": {
          "$ref": "#/definitions/v1alpha1SocketAddressInfo",
          "title": "socket_address contains socket address information"
        },
        "resolverOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "resolver_options contains resolver options"
        }
      },
      "title": "DnsResolverInfo contains DNS resolver information"
    },
    "v1alpha1DropOverloadInfo": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "title": "category is the drop category"
        },
        "dropPercentage": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "drop_percentage contains drop percentage"
        }
      },
      "title": "DropOverloadInfo contains drop overload information"
    },
    "v1alpha1DynamicConfigInfo": {
      "type": "object",
      "properties": {
        "adsConfig": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "ads_config contains ADS configuration source information"
        },
        "ldsConfig": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "lds_config contains LDS configuration source information"
        },
        "cdsConfig": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "cds_config contains CDS configuration source information"
        },
        "edsConfig": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "eds_config contains EDS configuration source information"
        },
        "rdsConfig": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "rds_config contains RDS configuration source information"
        },
        "sdsConfig": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "sds_config contains SDS configuration source information"
        },
        "initialFetchTimeout": {
          "type": "string",
          "title": "initial_fetch_timeout is the timeout for initial resource fetch"
        }
      },
      "title": "DynamicConfigInfo contains information about dynamic resource configuration"
    },
    "v1alpha1DynamicMetadataInfo": {
      "type": "object",
      "properties": {
        "metadataKey": {
          "$ref": "#/definitions/v1alpha1MetadataKeyInfo",
          "title": "metadata_key contains the metadata key"
        },
        "defaultValue": {
          "type": "string",
          "title": "default_value is the default value"
        },
        "source": {
          "type": "string",
          "title": "source is the metadata source"
        }
      },
      "title": "DynamicMetadataInfo contains dynamic metadata information"
    },
    "v1alpha1EdsClusterConfigInfo": {
      "type": "object",
      "properties": {
        "edsConfig": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "eds_config contains EDS configuration"
        },
        "serviceName": {
          "type": "string",
          "title": "service_name is the service name"
        }
      },
      "title": "EdsClusterConfigInfo contains EDS cluster configuration information"
    },
    "v1alpha1EndpointConfigInfo": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "title": "cluster_name is the cluster name"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1LocalityLbEndpointsInfo"
          },
          "title": "endpoints contains locality load balancing endpoints"
        },
        "policy": {
          "$ref": "#/definitions/v1alpha1PolicyInfo",
          "title": "policy contains endpoint policy"
        }
      },
      "title": "EndpointConfigInfo contains endpoint configuration information"
    },
    "v1alpha1EndpointDetailsInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "address is the endpoint address"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "title": "port is the endpoint port"
        },
        "hostname": {
          "type": "string",
          "title": "hostname is the endpoint hostname"
        },
        "healthCheckConfig": {
          "$ref": "#/definitions/v1alpha1HealthCheckConfigInfo",
          "title": "health_check_config contains health check configuration"
        }
      },
      "title": "EndpointDetailsInfo contains endpoint details information"
    },
    "v1alpha1EndpointInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "title": "address is the endpoint address"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "title": "port is the endpoint port"
        },
        "health": {
          "type": "string",
          "title": "health is the health status"
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "title": "weight is the load balancing weight"
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "title": "priority is the endpoint priority"
        },
        "hostIdentifier": {
          "type": "string",
          "title": "host_identifier is the unique host identifier"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "metadata contains endpoint metadata as key-value pairs"
        },
        "loadBalancingWeight": {
          "type": "integer",
          "format": "int64",
          "title": "load_balancing_weight is the load balancing weight"
        }
      },
      "title": "EndpointInfo contains individual endpoint information"
    },
    "v1alpha1EndpointSummary": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "title": "cluster_name is the name of the cluster"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EndpointInfo"
          },
          "title": "endpoints contains endpoint information"
        }
      },
      "title": "EndpointSummary contains endpoint configuration information"
    },
    "v1alpha1EventServiceConfigInfo": {
      "type": "object",
      "properties": {
        "eventService": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "event_service contains event service configuration"
        }
      },
      "title": "EventServiceConfigInfo contains event service configuration information"
    },
    "v1alpha1ExtensionInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the extension name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        }
      },
      "title": "ExtensionInfo contains extension information"
    },
    "v1alpha1FilterChainMatchInfo": {
      "type": "object",
      "properties": {
        "serverNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "server_names contains SNI server names"
        },
        "transportProtocol": {
          "type": "string",
          "title": "transport_protocol is the transport protocol"
        },
        "applicationProtocols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "application_protocols contains ALPN protocols"
        },
        "directSourcePrefixRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "direct_source_prefix_ranges contains source IP prefix ranges"
        },
        "destinationPort": {
          "type": "integer",
          "format": "int64",
          "title": "destination_port is the destination port"
        }
      },
      "title": "FilterChainMatchInfo contains filter chain matching criteria"
    },
    "v1alpha1FilterChainSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the filter chain name"
        },
        "filters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1FilterSummary"
          },
          "title": "filters contains the network filters in this chain"
        },
        "match": {
          "$ref": "#/definitions/v1alpha1FilterChainMatchInfo",
          "title": "match contains filter chain match criteria"
        },
        "tlsContext": {
          "$ref": "#/definitions/v1alpha1TLSContextInfo",
          "title": "tls_context contains TLS context information"
        }
      },
      "title": "FilterChainSummary contains filter chain information"
    },
    "v1alpha1FilterSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the filter name"
        },
        "httpConnectionManager": {
          "$ref": "#/definitions/v1alpha1HTTPConnectionManagerSummary"
        },
        "tcpProxy": {
          "$ref": "#/definitions/v1alpha1TCPProxySummary"
        }
      },
      "title": "FilterSummary contains network filter information"
    },
    "v1alpha1FractionInfo": {
      "type": "object",
      "properties": {
        "numerator": {
          "type": "integer",
          "format": "int64",
          "title": "numerator is the fraction numerator"
        },
        "denominator": {
          "type": "string",
          "title": "denominator is the fraction denominator"
        }
      },
      "title": "FractionInfo contains fraction information"
    },
    "v1alpha1GenericKeyInfo": {
      "type": "object",
      "properties": {
        "descriptorValue": {
          "type": "string",
          "title": "descriptor_value is the descriptor value"
        },
        "descriptorKey": {
          "type": "string",
          "title": "descriptor_key is the descriptor key"
        }
      },
      "title": "GenericKeyInfo contains generic key information"
    },
    "v1alpha1GetProxyConfigResponse": {
      "type": "object",
      "properties": {
        "proxyConfig": {
          "$ref": "#/definitions/v1alpha1ProxyConfig",
          "description": "proxy_config contains the proxy configuration data."
        }
      },
      "description": "GetProxyConfigResponse contains the proxy configuration for the requested instance."
    },
    "v1alpha1GrpcHealthCheckInfo": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string",
          "title": "service_name is the gRPC service name"
        },
        "authority": {
          "type": "string",
          "title": "authority is the gRPC authority"
        },
        "initialMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "initial_metadata contains initial metadata"
        }
      },
      "title": "GrpcHealthCheckInfo contains gRPC health check information"
    },
    "v1alpha1GrpcRouteMatchInfo": {
      "type": "object",
      "description": "Add gRPC-specific fields as needed",
      "title": "GrpcRouteMatchInfo contains gRPC route matching information"
    },
    "v1alpha1HTTPConnectionManagerSummary": {
      "type": "object",
      "properties": {
        "codecType": {
          "type": "string",
          "title": "codec_type is the HTTP codec type"
        },
        "routeConfig": {
          "$ref": "#/definitions/v1alpha1RouteConfigInfo",
          "title": "route_config contains inline route configuration"
        },
        "rds": {
          "$ref": "#/definitions/v1alpha1RDSInfo",
          "title": "rds contains RDS configuration"
        },
        "httpFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HTTPFilterSummary"
          },
          "title": "http_filters contains HTTP filters"
        },
        "accessLog": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1AccessLogInfo"
          },
          "title": "access_log contains access log configuration"
        },
        "useRemoteAddress": {
          "type": "boolean",
          "title": "use_remote_address indicates if remote address should be used"
        },
        "xffNumTrustedHops": {
          "type": "integer",
          "format": "int64",
          "title": "xff_num_trusted_hops is the number of trusted XFF hops"
        },
        "skipXffAppend": {
          "type": "boolean",
          "title": "skip_xff_append indicates if XFF append should be skipped"
        },
        "via": {
          "type": "string",
          "title": "via is the Via header value"
        },
        "generateRequestId": {
          "type": "boolean",
          "title": "generate_request_id indicates if request ID should be generated"
        },
        "forwardClientCertDetails": {
          "type": "string",
          "title": "forward_client_cert_details indicates how client cert details are forwarded"
        },
        "setCurrentClientCertDetails": {
          "type": "boolean",
          "title": "set_current_client_cert_details indicates if current client cert details are set"
        },
        "proxy100Continue": {
          "type": "boolean",
          "title": "proxy_100_continue indicates if 100-continue is proxied"
        },
        "streamIdleTimeout": {
          "type": "string",
          "title": "stream_idle_timeout is the stream idle timeout"
        },
        "requestTimeout": {
          "type": "string",
          "title": "request_timeout is the request timeout"
        },
        "drainTimeout": {
          "type": "string",
          "title": "drain_timeout is the drain timeout"
        },
        "delayedCloseTimeout": {
          "type": "string",
          "title": "delayed_close_timeout is the delayed close timeout"
        },
        "serverName": {
          "type": "string",
          "title": "server_name is the server name"
        }
      },
      "title": "HTTPConnectionManagerSummary contains HTTP connection manager configuration"
    },
    "v1alpha1HTTPFilterSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the filter name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        },
        "disabled": {
          "type": "boolean",
          "title": "disabled indicates if the filter is disabled"
        }
      },
      "title": "HTTPFilterSummary contains HTTP filter information"
    },
    "v1alpha1HashPolicyConnectionPropertiesInfo": {
      "type": "object",
      "properties": {
        "sourceIp": {
          "type": "boolean",
          "title": "source_ip indicates if source IP is used"
        }
      },
      "title": "HashPolicyConnectionPropertiesInfo contains connection properties hash policy information"
    },
    "v1alpha1HashPolicyCookieInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the cookie name"
        },
        "ttl": {
          "type": "string",
          "title": "ttl is the cookie TTL"
        },
        "path": {
          "type": "string",
          "title": "path is the cookie path"
        }
      },
      "title": "HashPolicyCookieInfo contains cookie hash policy information"
    },
    "v1alpha1HashPolicyFilterStateInfo": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the filter state key"
        }
      },
      "title": "HashPolicyFilterStateInfo contains filter state hash policy information"
    },
    "v1alpha1HashPolicyHeaderInfo": {
      "type": "object",
      "properties": {
        "headerName": {
          "type": "string",
          "title": "header_name is the header name"
        },
        "regexRewrite": {
          "$ref": "#/definitions/v1alpha1RegexRewriteInfo",
          "title": "regex_rewrite contains regex rewrite configuration"
        }
      },
      "title": "HashPolicyHeaderInfo contains header hash policy information"
    },
    "v1alpha1HashPolicyInfo": {
      "type": "object",
      "properties": {
        "policySpecifier": {
          "type": "string",
          "title": "policy_specifier indicates the type of hash policy"
        },
        "header": {
          "$ref": "#/definitions/v1alpha1HashPolicyHeaderInfo",
          "title": "header contains header hash policy"
        },
        "cookie": {
          "$ref": "#/definitions/v1alpha1HashPolicyCookieInfo",
          "title": "cookie contains cookie hash policy"
        },
        "connectionProperties": {
          "$ref": "#/definitions/v1alpha1HashPolicyConnectionPropertiesInfo",
          "title": "connection_properties contains connection properties hash policy"
        },
        "queryParameter": {
          "$ref": "#/definitions/v1alpha1HashPolicyQueryParameterInfo",
          "title": "query_parameter contains query parameter hash policy"
        },
        "filterState": {
          "$ref": "#/definitions/v1alpha1HashPolicyFilterStateInfo",
          "title": "filter_state contains filter state hash policy"
        },
        "terminal": {
          "type": "boolean",
          "title": "terminal indicates if this is a terminal hash policy"
        }
      },
      "title": "HashPolicyInfo contains hash policy information"
    },
    "v1alpha1HashPolicyQueryParameterInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the query parameter name"
        }
      },
      "title": "HashPolicyQueryParameterInfo contains query parameter hash policy information"
    },
    "v1alpha1HeaderInfo": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the header key"
        },
        "value": {
          "type": "string",
          "title": "value is the header value"
        }
      },
      "title": "HeaderInfo contains header information"
    },
    "v1alpha1HeaderMatcherInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the header name"
        },
        "presentMatch": {
          "type": "boolean",
          "title": "present_match indicates presence matching"
        },
        "exactMatch": {
          "type": "string",
          "title": "exact_match contains exact match value"
        },
        "safeRegexMatch": {
          "type": "string",
          "title": "safe_regex_match contains regex match pattern"
        },
        "rangeMatch": {
          "$ref": "#/definitions/v1alpha1RangeMatchInfo",
          "title": "range_match contains range matching criteria"
        },
        "prefixMatch": {
          "type": "string",
          "title": "prefix_match contains prefix match value"
        },
        "suffixMatch": {
          "type": "string",
          "title": "suffix_match contains suffix match value"
        },
        "containsMatch": {
          "type": "string",
          "title": "contains_match contains substring match value"
        },
        "invertMatch": {
          "type": "boolean",
          "title": "invert_match indicates if the match should be inverted"
        },
        "treatMissingAsEmpty": {
          "type": "boolean",
          "title": "treat_missing_as_empty indicates if missing headers are treated as empty"
        }
      },
      "title": "HeaderMatcherInfo contains header matching information"
    },
    "v1alpha1HeaderValueMatchInfo": {
      "type": "object",
      "properties": {
        "descriptorValue": {
          "type": "string",
          "title": "descriptor_value is the descriptor value"
        },
        "expectMatch": {
          "type": "boolean",
          "title": "expect_match indicates if a match is expected"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderMatcherInfo"
          },
          "title": "headers contains header matching criteria"
        }
      },
      "title": "HeaderValueMatchInfo contains header value match information"
    },
    "v1alpha1HeaderValueOption": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/v1alpha1HeaderInfo",
          "title": "header contains the header information"
        },
        "append": {
          "type": "boolean",
          "title": "append indicates if the header should be appended"
        },
        "keepEmptyValue": {
          "type": "boolean",
          "title": "keep_empty_value indicates if empty values should be kept"
        }
      },
      "title": "HeaderValueOption contains header value configuration"
    },
    "v1alpha1HealthCheckConfigInfo": {
      "type": "object",
      "properties": {
        "portValue": {
          "type": "integer",
          "format": "int64",
          "title": "port_value is the health check port"
        },
        "hostname": {
          "type": "string",
          "title": "hostname is the health check hostname"
        },
        "path": {
          "type": "string",
          "title": "path is the health check path"
        }
      },
      "title": "HealthCheckConfigInfo contains health check configuration information"
    },
    "v1alpha1HealthCheckInfo": {
      "type": "object",
      "properties": {
        "timeout": {
          "type": "string",
          "title": "timeout is the health check timeout"
        },
        "interval": {
          "type": "string",
          "title": "interval is the health check interval"
        },
        "intervalJitter": {
          "type": "string",
          "title": "interval_jitter is the interval jitter"
        },
        "intervalJitterPercent": {
          "type": "integer",
          "format": "int64",
          "title": "interval_jitter_percent is the interval jitter percentage"
        },
        "unhealthyThreshold": {
          "type": "integer",
          "format": "int64",
          "title": "unhealthy_threshold is the unhealthy threshold"
        },
        "healthyThreshold": {
          "type": "integer",
          "format": "int64",
          "title": "healthy_threshold is the healthy threshold"
        },
        "altPort": {
          "type": "integer",
          "format": "int64",
          "title": "alt_port is the alternative port"
        },
        "reuseConnection": {
          "type": "boolean",
          "title": "reuse_connection indicates if connection reuse is enabled"
        },
        "httpHealthCheck": {
          "$ref": "#/definitions/v1alpha1HttpHealthCheckInfo",
          "title": "http_health_check contains HTTP health check configuration"
        },
        "tcpHealthCheck": {
          "$ref": "#/definitions/v1alpha1TcpHealthCheckInfo",
          "title": "tcp_health_check contains TCP health check configuration"
        },
        "grpcHealthCheck": {
          "$ref": "#/definitions/v1alpha1GrpcHealthCheckInfo",
          "title": "grpc_health_check contains gRPC health check configuration"
        },
        "customHealthCheck": {
          "$ref": "#/definitions/v1alpha1CustomHealthCheckInfo",
          "title": "custom_health_check contains custom health check configuration"
        },
        "noTrafficInterval": {
          "type": "string",
          "title": "no_traffic_interval is the no traffic interval"
        },
        "noTrafficHealthyInterval": {
          "type": "string",
          "title": "no_traffic_healthy_interval is the no traffic healthy interval"
        },
        "unhealthyInterval": {
          "type": "string",
          "title": "unhealthy_interval is the unhealthy interval"
        },
        "unhealthyEdgeInterval": {
          "type": "string",
          "title": "unhealthy_edge_interval is the unhealthy edge interval"
        },
        "healthyEdgeInterval": {
          "type": "string",
          "title": "healthy_edge_interval is the healthy edge interval"
        },
        "eventLogPath": {
          "type": "string",
          "title": "event_log_path is the event log path"
        },
        "eventService": {
          "$ref": "#/definitions/v1alpha1EventServiceConfigInfo",
          "title": "event_service contains event service configuration"
        },
        "alwaysLogHealthCheckFailures": {
          "type": "boolean",
          "title": "always_log_health_check_failures indicates if health check failures are always logged"
        },
        "tlsOptions": {
          "$ref": "#/definitions/v1alpha1TlsOptionsInfo",
          "title": "tls_options contains TLS options"
        },
        "transportSocket": {
          "$ref": "#/definitions/v1alpha1TransportSocketInfo",
          "title": "transport_socket contains transport socket configuration"
        }
      },
      "title": "HealthCheckInfo contains health check information"
    },
    "v1alpha1HedgePolicyInfo": {
      "type": "object",
      "properties": {
        "initialRequests": {
          "type": "integer",
          "format": "int64",
          "title": "initial_requests is the number of initial requests"
        },
        "additionalRequestChance": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "additional_request_chance contains additional request chance"
        },
        "hedgeOnPerTryTimeout": {
          "type": "boolean",
          "title": "hedge_on_per_try_timeout indicates if hedging on per-try timeout is enabled"
        }
      },
      "title": "HedgePolicyInfo contains hedge policy information"
    },
    "v1alpha1HostInfo": {
      "type": "object",
      "properties": {
        "socketAddress": {
          "$ref": "#/definitions/v1alpha1SocketAddressInfo",
          "title": "socket_address contains socket address information"
        },
        "pipe": {
          "$ref": "#/definitions/v1alpha1PipeInfo",
          "title": "pipe contains pipe information"
        },
        "hostname": {
          "type": "string",
          "title": "hostname is the hostname"
        },
        "healthCheckConfig": {
          "$ref": "#/definitions/v1alpha1HealthCheckConfigInfo",
          "title": "health_check_config contains health check configuration"
        }
      },
      "title": "HostInfo contains host information"
    },
    "v1alpha1HttpHealthCheckInfo": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "title": "host is the health check host"
        },
        "path": {
          "type": "string",
          "title": "path is the health check path"
        },
        "send": {
          "type": "string",
          "title": "send is the data to send"
        },
        "receive": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "receive contains expected receive patterns"
        },
        "requestHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "request_headers_to_add contains headers to add to requests"
        },
        "requestHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "request_headers_to_remove contains headers to remove from requests"
        },
        "expectedStatuses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1StatusRangeInfo"
          },
          "title": "expected_statuses contains expected status ranges"
        },
        "useHttp2": {
          "type": "boolean",
          "title": "use_http2 indicates if HTTP/2 is used"
        },
        "serviceNameMatcher": {
          "$ref": "#/definitions/v1alpha1StringMatcherInfo",
          "title": "service_name_matcher contains service name matcher"
        },
        "method": {
          "type": "string",
          "title": "method is the HTTP method"
        }
      },
      "title": "HttpHealthCheckInfo contains HTTP health check information"
    },
    "v1alpha1InternalRedirectPolicyInfo": {
      "type": "object",
      "properties": {
        "maxInternalRedirects": {
          "type": "integer",
          "format": "int64",
          "title": "max_internal_redirects is the maximum number of internal redirects"
        },
        "redirectResponseCodes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "title": "redirect_response_codes contains redirect response codes"
        },
        "predicates": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1InternalRedirectPredicateInfo"
          },
          "title": "predicates contains redirect predicates"
        },
        "allowCrossSchemeRedirect": {
          "type": "boolean",
          "title": "allow_cross_scheme_redirect indicates if cross-scheme redirects are allowed"
        }
      },
      "title": "InternalRedirectPolicyInfo contains internal redirect policy information"
    },
    "v1alpha1InternalRedirectPredicateInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the predicate name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        }
      },
      "title": "InternalRedirectPredicateInfo contains internal redirect predicate information"
    },
    "v1alpha1LbEndpointInfo": {
      "type": "object",
      "properties": {
        "hostIdentifier": {
          "type": "string",
          "title": "host_identifier is the host identifier"
        },
        "endpoint": {
          "$ref": "#/definitions/v1alpha1EndpointDetailsInfo",
          "title": "endpoint contains endpoint details"
        },
        "healthStatus": {
          "type": "string",
          "title": "health_status is the health status"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "metadata contains endpoint metadata as key-value pairs"
        },
        "loadBalancingWeight": {
          "type": "integer",
          "format": "int64",
          "title": "load_balancing_weight is the load balancing weight"
        }
      },
      "title": "LbEndpointInfo contains load balancing endpoint information"
    },
    "v1alpha1LbSubsetConfigInfo": {
      "type": "object",
      "properties": {
        "fallbackPolicy": {
          "type": "string",
          "title": "fallback_policy is the fallback policy"
        },
        "defaultSubset": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "default_subset contains default subset metadata"
        },
        "subsetSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1LbSubsetSelectorInfo"
          },
          "title": "subset_selectors contains subset selectors"
        },
        "localityWeightAware": {
          "type": "boolean",
          "title": "locality_weight_aware indicates if locality weight awareness is enabled"
        },
        "scaleLocalityWeight": {
          "type": "boolean",
          "title": "scale_locality_weight indicates if locality weight scaling is enabled"
        },
        "panicModeAny": {
          "type": "boolean",
          "title": "panic_mode_any indicates if panic mode any is enabled"
        },
        "listAsAny": {
          "type": "boolean",
          "title": "list_as_any indicates if list as any is enabled"
        },
        "metadataFallbackPolicy": {
          "type": "string",
          "title": "metadata_fallback_policy is the metadata fallback policy"
        },
        "allowRedundantKeys": {
          "type": "boolean",
          "title": "allow_redundant_keys indicates if redundant keys are allowed"
        }
      },
      "title": "LbSubsetConfigInfo contains load balancing subset configuration information"
    },
    "v1alpha1LbSubsetSelectorInfo": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "keys contains selector keys"
        },
        "singleHostPerSubset": {
          "type": "boolean",
          "title": "single_host_per_subset indicates if single host per subset is enabled"
        },
        "fallbackPolicy": {
          "type": "string",
          "title": "fallback_policy is the fallback policy"
        },
        "fallbackKeysSubset": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "fallback_keys_subset contains fallback keys subset"
        }
      },
      "title": "LbSubsetSelectorInfo contains load balancing subset selector information"
    },
    "v1alpha1LeastRequestLbConfigInfo": {
      "type": "object",
      "properties": {
        "choiceCount": {
          "type": "integer",
          "format": "int64",
          "title": "choice_count is the choice count"
        },
        "activeRequestBias": {
          "$ref": "#/definitions/v1alpha1RuntimeDoubleInfo",
          "title": "active_request_bias contains active request bias"
        }
      },
      "title": "LeastRequestLbConfigInfo contains least request load balancing configuration information"
    },
    "v1alpha1ListenerFilterSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the filter name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        }
      },
      "title": "ListenerFilterSummary contains listener filter information"
    },
    "v1alpha1ListenerSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the listener name"
        },
        "address": {
          "type": "string",
          "title": "address is the listener address"
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "title": "port is the listener port"
        },
        "filterChains": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1FilterChainSummary"
          },
          "title": "filter_chains contains the filter chains"
        },
        "type": {
          "$ref": "#/definitions/v1alpha1ListenerType",
          "title": "type indicates the listener type and direction"
        },
        "useOriginalDst": {
          "type": "boolean",
          "title": "use_original_dst indicates if original destination is used"
        },
        "listenerFilters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ListenerFilterSummary"
          },
          "title": "listener_filters contains listener-level filters"
        },
        "rawConfig": {
          "type": "string",
          "title": "raw_config contains the raw listener configuration in JSON format"
        }
      },
      "title": "ListenerSummary contains essential listener configuration information"
    },
    "v1alpha1ListenerType": {
      "type": "string",
      "enum": [
        "INBOUND",
        "OUTBOUND",
        "VIRTUAL_INBOUND",
        "VIRTUAL_OUTBOUND",
        "METRICS",
        "HEALTHCHECK",
        "ADMIN_XDS",
        "ADMIN_WEBHOOK",
        "ADMIN_DEBUG"
      ],
      "default": "INBOUND",
      "description": "- INBOUND: INBOUND listeners receive traffic from external sources\n - OUTBOUND: OUTBOUND listeners send traffic to external destinations\n - VIRTUAL_INBOUND: VIRTUAL_INBOUND listeners are virtual inbound listeners (typically 0.0.0.0 without use_original_dst)\n - VIRTUAL_OUTBOUND: VIRTUAL_OUTBOUND listeners are virtual outbound listeners (typically 0.0.0.0 with use_original_dst)\n - METRICS: METRICS listeners serve Prometheus metrics (typically on port 15090)\n - HEALTHCHECK: HEALTHCHECK listeners serve health check endpoints (typically on port 15021)\n - ADMIN_XDS: ADMIN_XDS listeners serve Envoy xDS configuration (typically on port 15010)\n - ADMIN_WEBHOOK: ADMIN_WEBHOOK listeners serve Istio webhook endpoints (typically on port 15012)\n - ADMIN_DEBUG: ADMIN_DEBUG listeners serve Envoy debug/admin interface (typically on port 15014)",
      "title": "ListenerType indicates the type/direction of a listener"
    },
    "v1alpha1LocalityInfo": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "title": "region is the region name"
        },
        "zone": {
          "type": "string",
          "title": "zone is the zone name"
        }
      },
      "title": "LocalityInfo contains locality information"
    },
    "v1alpha1LocalityLbConfigInfo": {
      "type": "object",
      "properties": {
        "zoneAwareLbConfig": {
          "$ref": "#/definitions/v1alpha1ZoneAwareLbConfigInfo",
          "title": "zone_aware_lb_config contains zone-aware load balancing configuration"
        },
        "localityWeightedLbConfig": {
          "$ref": "#/definitions/v1alpha1LocalityWeightedLbConfigInfo",
          "title": "locality_weighted_lb_config contains locality weighted load balancing configuration"
        }
      },
      "title": "LocalityLbConfigInfo contains locality load balancing configuration information"
    },
    "v1alpha1LocalityLbEndpointsInfo": {
      "type": "object",
      "properties": {
        "locality": {
          "$ref": "#/definitions/v1alpha1LocalityInfo",
          "title": "locality contains locality information"
        },
        "lbEndpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1LbEndpointInfo"
          },
          "title": "lb_endpoints contains load balancing endpoints"
        },
        "loadBalancingWeight": {
          "type": "integer",
          "format": "int64",
          "title": "load_balancing_weight is the load balancing weight"
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "title": "priority is the endpoint priority"
        },
        "proximity": {
          "type": "integer",
          "format": "int64",
          "title": "proximity is the endpoint proximity"
        }
      },
      "title": "LocalityLbEndpointsInfo contains locality load balancing endpoints information"
    },
    "v1alpha1LocalityWeightedLbConfigInfo": {
      "type": "object",
      "description": "Add fields as needed",
      "title": "LocalityWeightedLbConfigInfo contains locality weighted load balancing configuration information"
    },
    "v1alpha1MaglevLbConfigInfo": {
      "type": "object",
      "properties": {
        "tableSize": {
          "type": "string",
          "format": "uint64",
          "title": "table_size is the table size"
        }
      },
      "title": "MaglevLbConfigInfo contains Maglev load balancing configuration information"
    },
    "v1alpha1MaxStreamDurationInfo": {
      "type": "object",
      "properties": {
        "maxStreamDuration": {
          "type": "string",
          "title": "max_stream_duration is the maximum stream duration"
        },
        "grpcTimeoutHeaderMax": {
          "type": "string",
          "title": "grpc_timeout_header_max is the maximum gRPC timeout header value"
        },
        "grpcTimeoutHeaderOffset": {
          "type": "string",
          "title": "grpc_timeout_header_offset is the gRPC timeout header offset"
        }
      },
      "title": "MaxStreamDurationInfo contains max stream duration information"
    },
    "v1alpha1MetadataInfo": {
      "type": "object",
      "properties": {
        "metadataKey": {
          "$ref": "#/definitions/v1alpha1MetadataKeyInfo",
          "title": "metadata_key contains the metadata key"
        },
        "defaultValue": {
          "type": "string",
          "title": "default_value is the default value"
        },
        "source": {
          "type": "string",
          "title": "source is the metadata source"
        }
      },
      "title": "MetadataInfo contains metadata information"
    },
    "v1alpha1MetadataKeyInfo": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the metadata key"
        },
        "path": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "path contains the metadata path"
        }
      },
      "title": "MetadataKeyInfo contains metadata key information"
    },
    "v1alpha1MetadataMatchPathInfo": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the path key"
        }
      },
      "title": "MetadataMatchPathInfo contains metadata match path information"
    },
    "v1alpha1MetadataMatcherInfo": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "string",
          "title": "filter is the metadata filter"
        },
        "path": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1MetadataMatchPathInfo"
          },
          "title": "path contains the metadata path"
        },
        "value": {
          "type": "string",
          "title": "value is the metadata value"
        }
      },
      "title": "MetadataMatcherInfo contains metadata matching information"
    },
    "v1alpha1NodeSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id is the node identifier"
        },
        "cluster": {
          "type": "string",
          "title": "cluster is the service cluster name"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "metadata contains node metadata as key-value pairs"
        },
        "locality": {
          "$ref": "#/definitions/v1alpha1LocalityInfo",
          "title": "locality contains locality information"
        }
      },
      "title": "NodeSummary contains information about the Envoy node"
    },
    "v1alpha1OriginalDstLbConfigInfo": {
      "type": "object",
      "properties": {
        "useHttpHeader": {
          "type": "boolean",
          "title": "use_http_header indicates if HTTP header is used"
        }
      },
      "title": "OriginalDstLbConfigInfo contains original destination load balancing configuration information"
    },
    "v1alpha1OutlierDetectionInfo": {
      "type": "object",
      "properties": {
        "consecutiveServerError": {
          "type": "integer",
          "format": "int64",
          "title": "consecutive_server_error is the consecutive server error threshold"
        },
        "interval": {
          "type": "string",
          "title": "interval is the outlier detection interval"
        },
        "baseEjectionTime": {
          "type": "string",
          "title": "base_ejection_time is the base ejection time"
        },
        "maxEjectionPercent": {
          "type": "integer",
          "format": "int64",
          "title": "max_ejection_percent is the maximum ejection percentage"
        },
        "minHealthPercent": {
          "type": "integer",
          "format": "int64",
          "title": "min_health_percent is the minimum health percentage"
        },
        "splitExternalLocalOriginErrors": {
          "type": "boolean",
          "title": "split_external_local_origin_errors indicates if external and local origin errors are split"
        },
        "consecutiveLocalOriginFailure": {
          "type": "integer",
          "format": "int64",
          "title": "consecutive_local_origin_failure is the consecutive local origin failure threshold"
        },
        "consecutiveGatewayFailure": {
          "type": "integer",
          "format": "int64",
          "title": "consecutive_gateway_failure is the consecutive gateway failure threshold"
        },
        "consecutive5xxFailure": {
          "type": "integer",
          "format": "int64",
          "title": "consecutive_5xx_failure is the consecutive 5xx failure threshold"
        },
        "enforcingConsecutiveServerError": {
          "type": "integer",
          "format": "int64",
          "title": "enforcing_consecutive_server_error is the enforcing consecutive server error percentage"
        },
        "enforcingSuccessRate": {
          "type": "integer",
          "format": "int64",
          "title": "enforcing_success_rate is the enforcing success rate percentage"
        },
        "successRateMinimumHosts": {
          "type": "integer",
          "format": "int64",
          "title": "success_rate_minimum_hosts is the success rate minimum hosts"
        },
        "successRateRequestVolume": {
          "type": "integer",
          "format": "int64",
          "title": "success_rate_request_volume is the success rate request volume"
        },
        "successRateStdevFactor": {
          "type": "integer",
          "format": "int64",
          "title": "success_rate_stdev_factor is the success rate standard deviation factor"
        },
        "enforcingConsecutiveLocalOriginFailure": {
          "type": "integer",
          "format": "int64",
          "title": "enforcing_consecutive_local_origin_failure is the enforcing consecutive local origin failure percentage"
        },
        "enforcingConsecutiveGatewayFailure": {
          "type": "integer",
          "format": "int64",
          "title": "enforcing_consecutive_gateway_failure is the enforcing consecutive gateway failure percentage"
        },
        "enforcingLocalOriginSuccessRate": {
          "type": "integer",
          "format": "int64",
          "title": "enforcing_local_origin_success_rate is the enforcing local origin success rate percentage"
        },
        "localOriginSuccessRateMinimumHosts": {
          "type": "integer",
          "format": "int64",
          "title": "local_origin_success_rate_minimum_hosts is the local origin success rate minimum hosts"
        },
        "localOriginSuccessRateRequestVolume": {
          "type": "integer",
          "format": "int64",
          "title": "local_origin_success_rate_request_volume is the local origin success rate request volume"
        },
        "localOriginSuccessRateStdevFactor": {
          "type": "integer",
          "format": "int64",
          "title": "local_origin_success_rate_stdev_factor is the local origin success rate standard deviation factor"
        },
        "enforcing5xxFailure": {
          "type": "integer",
          "format": "int64",
          "title": "enforcing_5xx_failure is the enforcing 5xx failure percentage"
        },
        "maxEjectionTime": {
          "type": "string",
          "title": "max_ejection_time is the maximum ejection time"
        }
      },
      "title": "OutlierDetectionInfo contains outlier detection information"
    },
    "v1alpha1PipeInfo": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "path is the pipe path"
        },
        "mode": {
          "type": "integer",
          "format": "int64",
          "title": "mode is the pipe mode"
        }
      },
      "title": "PipeInfo contains pipe information"
    },
    "v1alpha1PolicyInfo": {
      "type": "object",
      "properties": {
        "dropOverloads": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1DropOverloadInfo"
          },
          "title": "drop_overloads contains drop overload configuration"
        },
        "overprovisioningFactor": {
          "type": "integer",
          "format": "int64",
          "title": "overprovisioning_factor is the overprovisioning factor"
        },
        "endpointStaleAfter": {
          "type": "string",
          "title": "endpoint_stale_after is the endpoint stale timeout"
        },
        "disableOverprovisioning": {
          "type": "boolean",
          "title": "disable_overprovisioning indicates if overprovisioning is disabled"
        }
      },
      "title": "PolicyInfo contains policy information"
    },
    "v1alpha1ProxyConfig": {
      "type": "object",
      "properties": {
        "proxyType": {
          "type": "string",
          "description": "proxy_type indicates the type of proxy (e.g., \"envoy\", \"istio-proxy\")."
        },
        "version": {
          "type": "string",
          "description": "version is the version of the proxy software."
        },
        "adminPort": {
          "type": "integer",
          "format": "int32",
          "description": "admin_port is the port number where the proxy admin interface is accessible."
        },
        "bootstrap": {
          "$ref": "#/definitions/v1alpha1BootstrapSummary",
          "description": "bootstrap contains the bootstrap configuration summary."
        },
        "listeners": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ListenerSummary"
          },
          "description": "listeners contains the listener configuration summaries."
        },
        "clusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ClusterSummary"
          },
          "description": "clusters contains the cluster configuration summaries."
        },
        "endpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1EndpointSummary"
          },
          "description": "endpoints contains the endpoint configuration summaries."
        },
        "routes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RouteConfigSummary"
          },
          "description": "routes contains the route configuration summaries."
        },
        "rawConfigDump": {
          "type": "string",
          "description": "raw_config_dump is the original raw configuration dump for debugging."
        }
      },
      "description": "ProxyConfig represents the configuration of a proxy sidecar (e.g., Envoy)."
    },
    "v1alpha1QueryParameterMatcherInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the parameter name"
        },
        "stringMatch": {
          "type": "string",
          "title": "string_match contains string matching criteria"
        },
        "presentMatch": {
          "type": "boolean",
          "title": "present_match indicates presence matching"
        }
      },
      "title": "QueryParameterMatcherInfo contains query parameter matching information"
    },
    "v1alpha1RDSInfo": {
      "type": "object",
      "properties": {
        "configSource": {
          "$ref": "#/definitions/v1alpha1ConfigSourceInfo",
          "title": "config_source contains configuration source information"
        },
        "routeConfigName": {
          "type": "string",
          "title": "route_config_name is the name of the route configuration"
        }
      },
      "title": "RDSInfo contains RDS configuration information"
    },
    "v1alpha1RangeMatchInfo": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "int64",
          "title": "start is the range start"
        },
        "end": {
          "type": "string",
          "format": "int64",
          "title": "end is the range end"
        }
      },
      "title": "RangeMatchInfo contains range matching information"
    },
    "v1alpha1RateLimitActionInfo": {
      "type": "object",
      "properties": {
        "actionSpecifier": {
          "type": "string",
          "title": "action_specifier indicates the type of action"
        },
        "sourceCluster": {
          "type": "boolean",
          "title": "source_cluster indicates if source cluster is used"
        },
        "destinationCluster": {
          "type": "boolean",
          "title": "destination_cluster indicates if destination cluster is used"
        },
        "requestHeaders": {
          "$ref": "#/definitions/v1alpha1RequestHeadersInfo",
          "title": "request_headers contains request header action"
        },
        "remoteAddress": {
          "type": "boolean",
          "title": "remote_address indicates if remote address is used"
        },
        "genericKey": {
          "$ref": "#/definitions/v1alpha1GenericKeyInfo",
          "title": "generic_key contains generic key action"
        },
        "headerValueMatch": {
          "$ref": "#/definitions/v1alpha1HeaderValueMatchInfo",
          "title": "header_value_match contains header value match action"
        },
        "dynamicMetadata": {
          "$ref": "#/definitions/v1alpha1DynamicMetadataInfo",
          "title": "dynamic_metadata contains dynamic metadata action"
        },
        "metadata": {
          "$ref": "#/definitions/v1alpha1MetadataInfo",
          "title": "metadata contains metadata action"
        },
        "extension": {
          "$ref": "#/definitions/v1alpha1ExtensionInfo",
          "title": "extension contains extension action"
        }
      },
      "title": "RateLimitActionInfo contains rate limit action information"
    },
    "v1alpha1RateLimitDescriptorEntryInfo": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "key is the descriptor key"
        },
        "value": {
          "type": "string",
          "title": "value is the descriptor value"
        }
      },
      "title": "RateLimitDescriptorEntryInfo contains rate limit descriptor entry information"
    },
    "v1alpha1RateLimitDescriptorInfo": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RateLimitDescriptorEntryInfo"
          },
          "title": "entries contains descriptor entries"
        }
      },
      "title": "RateLimitDescriptorInfo contains rate limit descriptor information"
    },
    "v1alpha1RateLimitInfo": {
      "type": "object",
      "properties": {
        "stage": {
          "type": "integer",
          "format": "int64",
          "title": "stage is the rate limit stage"
        },
        "disableKey": {
          "type": "string",
          "title": "disable_key is the disable key"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RateLimitActionInfo"
          },
          "title": "actions contains rate limit actions"
        },
        "limit": {
          "$ref": "#/definitions/v1alpha1RateLimitDescriptorInfo",
          "title": "limit contains rate limit descriptor"
        }
      },
      "title": "RateLimitInfo contains rate limiting information"
    },
    "v1alpha1RefreshRateInfo": {
      "type": "object",
      "properties": {
        "baseInterval": {
          "type": "string",
          "title": "base_interval is the base interval"
        },
        "maxInterval": {
          "type": "string",
          "title": "max_interval is the maximum interval"
        }
      },
      "title": "RefreshRateInfo contains refresh rate information"
    },
    "v1alpha1RegexRewriteInfo": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string",
          "title": "pattern is the regex pattern"
        },
        "substitution": {
          "type": "string",
          "title": "substitution is the substitution string"
        }
      },
      "title": "RegexRewriteInfo contains regex rewrite information"
    },
    "v1alpha1RequestHeadersInfo": {
      "type": "object",
      "properties": {
        "headerName": {
          "type": "string",
          "title": "header_name is the header name"
        },
        "descriptorKey": {
          "type": "string",
          "title": "descriptor_key is the descriptor key"
        },
        "skipIfAbsent": {
          "type": "boolean",
          "title": "skip_if_absent indicates if the action should be skipped if header is absent"
        }
      },
      "title": "RequestHeadersInfo contains request headers information"
    },
    "v1alpha1RequestMirrorPolicy": {
      "type": "object",
      "properties": {
        "cluster": {
          "type": "string",
          "title": "cluster is the mirror cluster"
        },
        "runtimeFraction": {
          "$ref": "#/definitions/v1alpha1RuntimeFractionInfo",
          "title": "runtime_fraction contains runtime fraction configuration"
        },
        "traceSampled": {
          "type": "boolean",
          "title": "trace_sampled indicates if trace sampling is enabled"
        }
      },
      "title": "RequestMirrorPolicy contains request mirror policy information"
    },
    "v1alpha1RetryBackOffInfo": {
      "type": "object",
      "properties": {
        "baseInterval": {
          "type": "string",
          "title": "base_interval is the base interval"
        },
        "maxInterval": {
          "type": "string",
          "title": "max_interval is the maximum interval"
        }
      },
      "title": "RetryBackOffInfo contains retry backoff information"
    },
    "v1alpha1RetryPolicyInfo": {
      "type": "object",
      "properties": {
        "retryOn": {
          "type": "string",
          "title": "retry_on contains retry conditions"
        },
        "numRetries": {
          "type": "integer",
          "format": "int64",
          "title": "num_retries is the number of retries"
        },
        "perTryTimeout": {
          "type": "string",
          "title": "per_try_timeout is the timeout per try"
        },
        "retryPriority": {
          "type": "string",
          "title": "retry_priority is the retry priority"
        },
        "retryHostPredicate": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "retry_host_predicate contains retry host predicates"
        },
        "hostSelectionRetryMaxAttempts": {
          "type": "string",
          "format": "int64",
          "title": "host_selection_retry_max_attempts is the maximum host selection retry attempts"
        },
        "retriableStatusCodes": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "title": "retriable_status_codes contains retriable status codes"
        },
        "retryBackOff": {
          "$ref": "#/definitions/v1alpha1RetryBackOffInfo",
          "title": "retry_back_off contains retry backoff configuration"
        },
        "retriableHeaders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderMatcherInfo"
          },
          "title": "retriable_headers contains retriable header matching"
        },
        "retriableRequestHeaders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderMatcherInfo"
          },
          "title": "retriable_request_headers contains retriable request header matching"
        }
      },
      "title": "RetryPolicyInfo contains retry policy information"
    },
    "v1alpha1RingHashLbConfigInfo": {
      "type": "object",
      "properties": {
        "minimumRingSize": {
          "type": "string",
          "format": "uint64",
          "title": "minimum_ring_size is the minimum ring size"
        },
        "hashFunction": {
          "type": "string",
          "title": "hash_function is the hash function"
        },
        "maximumRingSize": {
          "type": "string",
          "format": "uint64",
          "title": "maximum_ring_size is the maximum ring size"
        }
      },
      "title": "RingHashLbConfigInfo contains ring hash load balancing configuration information"
    },
    "v1alpha1RouteActionInfo": {
      "type": "object",
      "properties": {
        "actionType": {
          "type": "string",
          "title": "action_type indicates the type of action"
        },
        "cluster": {
          "type": "string",
          "title": "cluster is the destination cluster"
        },
        "clusterHeader": {
          "type": "string",
          "title": "cluster_header is the header containing cluster name"
        },
        "weightedClusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1WeightedClusterInfo"
          },
          "title": "weighted_clusters contains weighted cluster destinations"
        },
        "clusterNotFoundResponseCode": {
          "type": "string",
          "title": "cluster_not_found_response_code is the response code when cluster is not found"
        },
        "prefixRewrite": {
          "type": "string",
          "title": "prefix_rewrite is the prefix rewrite rule"
        },
        "regexRewrite": {
          "$ref": "#/definitions/v1alpha1RegexRewriteInfo",
          "title": "regex_rewrite contains regex rewrite rule"
        },
        "hostRewriteSpecifier": {
          "type": "string",
          "title": "host_rewrite_specifier indicates how host rewriting is done"
        },
        "hostRewriteLiteral": {
          "type": "string",
          "title": "host_rewrite_literal is the literal host rewrite value"
        },
        "autoHostRewrite": {
          "type": "boolean",
          "title": "auto_host_rewrite indicates if automatic host rewriting is enabled"
        },
        "autoHostRewriteHeader": {
          "type": "string",
          "title": "auto_host_rewrite_header is the header for automatic host rewriting"
        },
        "timeout": {
          "type": "string",
          "title": "timeout is the action timeout"
        },
        "idleTimeout": {
          "type": "string",
          "title": "idle_timeout is the idle timeout"
        },
        "retryPolicy": {
          "$ref": "#/definitions/v1alpha1RetryPolicyInfo",
          "title": "retry_policy contains retry policy"
        },
        "requestMirrorPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RequestMirrorPolicy"
          },
          "title": "request_mirror_policies contains request mirror policies"
        },
        "priority": {
          "type": "string",
          "title": "priority is the action priority"
        },
        "rateLimits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RateLimitInfo"
          },
          "title": "rate_limits contains rate limiting configuration"
        },
        "includeVhRateLimits": {
          "type": "boolean",
          "title": "include_vh_rate_limits indicates if VH rate limits are included"
        },
        "hashPolicy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HashPolicyInfo"
          },
          "title": "hash_policy contains hash policy configuration"
        },
        "cors": {
          "$ref": "#/definitions/v1alpha1CorsInfo",
          "title": "cors contains CORS configuration"
        },
        "maxGrpcTimeout": {
          "type": "string",
          "title": "max_grpc_timeout is the maximum gRPC timeout"
        },
        "grpcTimeoutOffset": {
          "type": "string",
          "title": "grpc_timeout_offset is the gRPC timeout offset"
        },
        "upgradeConfigs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1UpgradeConfigInfo"
          },
          "title": "upgrade_configs contains upgrade configuration"
        },
        "internalRedirectPolicy": {
          "$ref": "#/definitions/v1alpha1InternalRedirectPolicyInfo",
          "title": "internal_redirect_policy contains internal redirect policy"
        },
        "maxInternalRedirects": {
          "type": "integer",
          "format": "int64",
          "title": "max_internal_redirects is the maximum number of internal redirects"
        },
        "hedgePolicy": {
          "$ref": "#/definitions/v1alpha1HedgePolicyInfo",
          "title": "hedge_policy contains hedge policy"
        },
        "maxStreamDuration": {
          "$ref": "#/definitions/v1alpha1MaxStreamDurationInfo",
          "title": "max_stream_duration contains max stream duration"
        }
      },
      "title": "RouteActionInfo contains route action information"
    },
    "v1alpha1RouteConfigInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the route configuration name"
        },
        "virtualHosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VirtualHostInfo"
          },
          "title": "virtual_hosts contains virtual hosts"
        },
        "internalOnlyHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "internal_only_headers contains headers that are internal only"
        },
        "responseHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "response_headers_to_add contains headers to add to responses"
        },
        "responseHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "response_headers_to_remove contains headers to remove from responses"
        },
        "requestHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "request_headers_to_add contains headers to add to requests"
        },
        "requestHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "request_headers_to_remove contains headers to remove from requests"
        },
        "validateClusters": {
          "type": "boolean",
          "title": "validate_clusters indicates if clusters should be validated"
        }
      },
      "title": "RouteConfigInfo contains route configuration information"
    },
    "v1alpha1RouteConfigSummary": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the route configuration name"
        },
        "virtualHosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VirtualHostInfo"
          },
          "title": "virtual_hosts contains virtual hosts"
        },
        "internalOnlyHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "internal_only_headers contains headers that are internal only"
        },
        "responseHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "response_headers_to_add contains headers to add to responses"
        },
        "responseHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "response_headers_to_remove contains headers to remove from responses"
        },
        "requestHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "request_headers_to_add contains headers to add to requests"
        },
        "requestHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "request_headers_to_remove contains headers to remove from requests"
        },
        "mostSpecificHeaderMutationsWins": {
          "type": "boolean",
          "title": "most_specific_header_mutations_wins indicates if most specific header mutations win"
        },
        "validateClusters": {
          "type": "boolean",
          "title": "validate_clusters indicates if clusters should be validated"
        },
        "maxDirectResponseBodySizeBytes": {
          "type": "integer",
          "format": "int64",
          "title": "max_direct_response_body_size_bytes is the maximum direct response body size"
        },
        "clusterSpecifierPlugins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1ClusterSpecifierPluginInfo"
          },
          "title": "cluster_specifier_plugins contains cluster specifier plugin configuration"
        }
      },
      "title": "RouteConfigSummary contains route configuration summary"
    },
    "v1alpha1RouteInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the route name"
        },
        "match": {
          "$ref": "#/definitions/v1alpha1RouteMatchInfo",
          "title": "match contains route matching criteria"
        },
        "action": {
          "$ref": "#/definitions/v1alpha1RouteActionInfo",
          "title": "action contains route action"
        },
        "decorator": {
          "$ref": "#/definitions/v1alpha1DecoratorInfo",
          "title": "decorator contains decorator information"
        },
        "requestHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "request_headers_to_add contains headers to add to requests"
        },
        "requestHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "request_headers_to_remove contains headers to remove from requests"
        },
        "responseHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "response_headers_to_add contains headers to add to responses"
        },
        "responseHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "response_headers_to_remove contains headers to remove from responses"
        },
        "tracing": {
          "$ref": "#/definitions/v1alpha1TracingInfo",
          "title": "tracing contains tracing configuration"
        },
        "timeout": {
          "type": "string",
          "title": "timeout is the route timeout"
        },
        "idleTimeout": {
          "type": "string",
          "title": "idle_timeout is the idle timeout"
        },
        "retryPolicy": {
          "$ref": "#/definitions/v1alpha1RetryPolicyInfo",
          "title": "retry_policy contains retry policy"
        },
        "requestMirrorPolicies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RequestMirrorPolicy"
          },
          "title": "request_mirror_policies contains request mirror policies"
        },
        "priority": {
          "type": "string",
          "title": "priority is the route priority"
        },
        "rateLimits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RateLimitInfo"
          },
          "title": "rate_limits contains rate limiting configuration"
        },
        "includeVhRateLimits": {
          "type": "boolean",
          "title": "include_vh_rate_limits indicates if VH rate limits are included"
        },
        "hedgePolicy": {
          "$ref": "#/definitions/v1alpha1HedgePolicyInfo",
          "title": "hedge_policy contains hedge policy"
        },
        "maxStreamDuration": {
          "$ref": "#/definitions/v1alpha1MaxStreamDurationInfo",
          "title": "max_stream_duration contains max stream duration"
        }
      },
      "title": "RouteInfo contains route information"
    },
    "v1alpha1RouteMatchInfo": {
      "type": "object",
      "properties": {
        "pathSpecifier": {
          "type": "string",
          "title": "path_specifier indicates the type of path matching"
        },
        "path": {
          "type": "string",
          "title": "path contains the path to match"
        },
        "caseSensitive": {
          "type": "boolean",
          "title": "case_sensitive indicates if matching is case sensitive"
        },
        "runtimeFraction": {
          "$ref": "#/definitions/v1alpha1RuntimeFractionInfo",
          "title": "runtime_fraction contains runtime fraction matching"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderMatcherInfo"
          },
          "title": "headers contains header matching criteria"
        },
        "queryParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1QueryParameterMatcherInfo"
          },
          "title": "query_parameters contains query parameter matching criteria"
        },
        "grpc": {
          "$ref": "#/definitions/v1alpha1GrpcRouteMatchInfo",
          "title": "grpc contains gRPC-specific matching"
        },
        "tlsContext": {
          "$ref": "#/definitions/v1alpha1TlsContextMatchInfo",
          "title": "tls_context contains TLS context matching"
        },
        "dynamicMetadata": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1MetadataMatcherInfo"
          },
          "title": "dynamic_metadata contains dynamic metadata matching"
        }
      },
      "title": "RouteMatchInfo contains route matching information"
    },
    "v1alpha1RuntimeDoubleInfo": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "number",
          "format": "double",
          "title": "default_value is the default value"
        },
        "runtimeKey": {
          "type": "string",
          "title": "runtime_key is the runtime key"
        }
      },
      "title": "RuntimeDoubleInfo contains runtime double information"
    },
    "v1alpha1RuntimeFractionInfo": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "default_value contains the default fraction value"
        },
        "runtimeKey": {
          "type": "string",
          "title": "runtime_key is the runtime key"
        }
      },
      "title": "RuntimeFractionInfo contains runtime fraction information"
    },
    "v1alpha1SocketAddressInfo": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "title": "protocol is the socket protocol"
        },
        "address": {
          "type": "string",
          "title": "address is the socket address"
        },
        "portSpecifier": {
          "type": "string",
          "title": "port_specifier indicates the port specifier type"
        },
        "portValue": {
          "type": "integer",
          "format": "int64",
          "title": "port_value is the port value"
        },
        "namedPort": {
          "type": "string",
          "title": "named_port is the named port"
        },
        "resolverName": {
          "type": "string",
          "title": "resolver_name is the resolver name"
        },
        "ipv4Compat": {
          "type": "boolean",
          "title": "ipv4_compat indicates if IPv4 compatibility is enabled"
        }
      },
      "title": "SocketAddressInfo contains socket address information"
    },
    "v1alpha1SocketOptionInfo": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string",
          "format": "int64",
          "title": "level is the socket option level"
        },
        "name": {
          "type": "string",
          "format": "int64",
          "title": "name is the socket option name"
        },
        "intValue": {
          "type": "string",
          "format": "int64",
          "title": "int_value is the integer value"
        },
        "bufValue": {
          "type": "string",
          "title": "buf_value is the buffer value"
        },
        "state": {
          "type": "string",
          "title": "state is the socket option state"
        }
      },
      "title": "SocketOptionInfo contains socket option information"
    },
    "v1alpha1StatusRangeInfo": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "uint64",
          "title": "start is the range start"
        },
        "end": {
          "type": "string",
          "format": "uint64",
          "title": "end is the range end"
        }
      },
      "title": "StatusRangeInfo contains status range information"
    },
    "v1alpha1StringMatcherInfo": {
      "type": "object",
      "properties": {
        "matchPattern": {
          "type": "string",
          "title": "match_pattern is the match pattern type"
        },
        "exactMatch": {
          "type": "string",
          "title": "exact_match contains exact match value"
        },
        "prefixMatch": {
          "type": "string",
          "title": "prefix_match contains prefix match value"
        },
        "suffixMatch": {
          "type": "string",
          "title": "suffix_match contains suffix match value"
        },
        "safeRegexMatch": {
          "type": "string",
          "title": "safe_regex_match contains regex match pattern"
        },
        "containsMatch": {
          "type": "string",
          "title": "contains_match contains substring match value"
        },
        "ignoreCase": {
          "type": "boolean",
          "title": "ignore_case indicates if case should be ignored"
        }
      },
      "title": "StringMatcherInfo contains string matcher information"
    },
    "v1alpha1TCPProxySummary": {
      "type": "object",
      "properties": {
        "statPrefix": {
          "type": "string",
          "title": "stat_prefix is the statistics prefix"
        },
        "cluster": {
          "type": "string",
          "title": "cluster is the destination cluster"
        },
        "weightedClusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1WeightedClusterInfo"
          },
          "title": "weighted_clusters contains weighted cluster destinations"
        },
        "idleTimeout": {
          "type": "string",
          "title": "idle_timeout is the idle timeout"
        },
        "downstreamIdleTimeout": {
          "type": "string",
          "title": "downstream_idle_timeout is the downstream idle timeout"
        },
        "upstreamIdleTimeout": {
          "type": "string",
          "title": "upstream_idle_timeout is the upstream idle timeout"
        },
        "accessLog": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1AccessLogInfo"
          },
          "title": "access_log contains access log configuration"
        },
        "maxConnectAttempts": {
          "type": "integer",
          "format": "int64",
          "title": "max_connect_attempts is the maximum connection attempts"
        },
        "hashPolicy": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HashPolicyInfo"
          },
          "title": "hash_policy contains hash policy configuration"
        },
        "tunnelingConfig": {
          "$ref": "#/definitions/v1alpha1TunnelingConfigInfo",
          "title": "tunneling_config contains tunneling configuration"
        },
        "maxDownstreamConnectionDuration": {
          "type": "string",
          "title": "max_downstream_connection_duration is the maximum downstream connection duration"
        }
      },
      "title": "TCPProxySummary contains TCP proxy configuration"
    },
    "v1alpha1TLSContextInfo": {
      "type": "object",
      "properties": {
        "commonTlsContext": {
          "type": "boolean",
          "title": "common_tls_context indicates if common TLS context is present"
        },
        "requireClientCertificate": {
          "type": "boolean",
          "title": "require_client_certificate indicates if client cert is required"
        },
        "sessionTicketKeys": {
          "type": "boolean",
          "title": "session_ticket_keys indicates if session ticket keys are present"
        }
      },
      "title": "TLSContextInfo contains TLS context information"
    },
    "v1alpha1TcpHealthCheckInfo": {
      "type": "object",
      "properties": {
        "send": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "send contains data to send"
        },
        "receive": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "receive contains expected receive patterns"
        }
      },
      "title": "TcpHealthCheckInfo contains TCP health check information"
    },
    "v1alpha1TcpKeepaliveInfo": {
      "type": "object",
      "properties": {
        "keepaliveProbes": {
          "type": "integer",
          "format": "int64",
          "title": "keepalive_probes is the number of keepalive probes"
        },
        "keepaliveTime": {
          "type": "integer",
          "format": "int64",
          "title": "keepalive_time is the keepalive time"
        },
        "keepaliveInterval": {
          "type": "integer",
          "format": "int64",
          "title": "keepalive_interval is the keepalive interval"
        }
      },
      "title": "TcpKeepaliveInfo contains TCP keepalive information"
    },
    "v1alpha1ThresholdInfo": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "string",
          "title": "priority is the threshold priority"
        },
        "maxConnections": {
          "type": "integer",
          "format": "int64",
          "title": "max_connections is the maximum connections"
        },
        "maxPendingRequests": {
          "type": "integer",
          "format": "int64",
          "title": "max_pending_requests is the maximum pending requests"
        },
        "maxRequests": {
          "type": "integer",
          "format": "int64",
          "title": "max_requests is the maximum requests"
        },
        "maxRetries": {
          "type": "integer",
          "format": "int64",
          "title": "max_retries is the maximum retries"
        },
        "trackRemaining": {
          "type": "boolean",
          "title": "track_remaining indicates if remaining resources are tracked"
        },
        "maxConnectionPools": {
          "type": "integer",
          "format": "int64",
          "title": "max_connection_pools is the maximum connection pools"
        }
      },
      "title": "ThresholdInfo contains threshold information"
    },
    "v1alpha1TlsContextMatchInfo": {
      "type": "object",
      "description": "Add TLS context matching fields as needed",
      "title": "TlsContextMatchInfo contains TLS context matching information"
    },
    "v1alpha1TlsOptionsInfo": {
      "type": "object",
      "properties": {
        "alpnProtocols": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "alpn_protocols contains ALPN protocols"
        }
      },
      "title": "TlsOptionsInfo contains TLS options information"
    },
    "v1alpha1TracingInfo": {
      "type": "object",
      "properties": {
        "clientSampling": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "client_sampling contains client sampling configuration"
        },
        "randomSampling": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "random_sampling contains random sampling configuration"
        },
        "overallSampling": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "overall_sampling contains overall sampling configuration"
        },
        "verbose": {
          "type": "boolean",
          "title": "verbose indicates if verbose tracing is enabled"
        },
        "maxPathTagLength": {
          "type": "integer",
          "format": "int64",
          "title": "max_path_tag_length is the maximum path tag length"
        },
        "customTags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1CustomTagInfo"
          },
          "title": "custom_tags contains custom tag configuration"
        }
      },
      "title": "TracingInfo contains tracing information"
    },
    "v1alpha1TransportSocketInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the transport socket name"
        },
        "typedConfigType": {
          "type": "string",
          "title": "typed_config_type is the type URL of the typed config"
        }
      },
      "title": "TransportSocketInfo contains transport socket information"
    },
    "v1alpha1TunnelingConfigInfo": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "title": "hostname is the tunneling hostname"
        },
        "usePost": {
          "type": "boolean",
          "title": "use_post indicates if POST method is used"
        },
        "headersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "headers_to_add contains headers to add"
        },
        "propagateResponseHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "propagate_response_headers contains response headers to propagate"
        },
        "propagateResponseTrailers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "propagate_response_trailers contains response trailers to propagate"
        }
      },
      "title": "TunnelingConfigInfo contains tunneling configuration information"
    },
    "v1alpha1UpgradeConfigInfo": {
      "type": "object",
      "properties": {
        "upgradeType": {
          "type": "string",
          "title": "upgrade_type is the upgrade type"
        },
        "enabled": {
          "type": "boolean",
          "title": "enabled indicates if the upgrade is enabled"
        }
      },
      "title": "UpgradeConfigInfo contains upgrade configuration information"
    },
    "v1alpha1UpstreamBindConfigInfo": {
      "type": "object",
      "properties": {
        "sourceAddress": {
          "$ref": "#/definitions/v1alpha1SocketAddressInfo",
          "title": "source_address contains source address information"
        },
        "freebindInterface": {
          "type": "boolean",
          "title": "freebind_interface indicates if freebind interface is enabled"
        },
        "socketOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SocketOptionInfo"
          },
          "title": "socket_options contains socket options"
        }
      },
      "title": "UpstreamBindConfigInfo contains upstream bind configuration information"
    },
    "v1alpha1UpstreamConnectionOptionsInfo": {
      "type": "object",
      "properties": {
        "tcpKeepalive": {
          "$ref": "#/definitions/v1alpha1TcpKeepaliveInfo",
          "title": "tcp_keepalive contains TCP keepalive configuration"
        },
        "socketOptions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1SocketOptionInfo"
          },
          "title": "socket_options contains socket options"
        }
      },
      "title": "UpstreamConnectionOptionsInfo contains upstream connection options information"
    },
    "v1alpha1VirtualClusterInfo": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string",
          "title": "pattern is the virtual cluster pattern"
        },
        "name": {
          "type": "string",
          "title": "name is the virtual cluster name"
        },
        "method": {
          "type": "string",
          "title": "method is the HTTP method"
        }
      },
      "title": "VirtualClusterInfo contains virtual cluster information"
    },
    "v1alpha1VirtualHostInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the virtual host name"
        },
        "domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "domains contains the domains for this virtual host"
        },
        "routes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RouteInfo"
          },
          "title": "routes contains the routes for this virtual host"
        },
        "requireTls": {
          "type": "string",
          "title": "require_tls indicates TLS requirement"
        },
        "virtualClusters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1VirtualClusterInfo"
          },
          "title": "virtual_clusters contains virtual cluster information"
        },
        "rateLimits": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1RateLimitInfo"
          },
          "title": "rate_limits contains rate limiting configuration"
        },
        "requestHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "request_headers_to_add contains headers to add to requests"
        },
        "requestHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "request_headers_to_remove contains headers to remove from requests"
        },
        "responseHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "response_headers_to_add contains headers to add to responses"
        },
        "responseHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "response_headers_to_remove contains headers to remove from responses"
        },
        "cors": {
          "$ref": "#/definitions/v1alpha1CorsInfo",
          "title": "cors contains CORS configuration"
        },
        "includeRequestAttemptCount": {
          "type": "boolean",
          "title": "include_request_attempt_count indicates if request attempt count is included"
        },
        "includeAttemptCountInResponse": {
          "type": "boolean",
          "title": "include_attempt_count_in_response indicates if attempt count is included in response"
        },
        "retryPolicy": {
          "$ref": "#/definitions/v1alpha1RetryPolicyInfo",
          "title": "retry_policy contains retry policy"
        },
        "hedgePolicy": {
          "$ref": "#/definitions/v1alpha1HedgePolicyInfo",
          "title": "hedge_policy contains hedge policy"
        }
      },
      "title": "VirtualHostInfo contains virtual host information"
    },
    "v1alpha1WeightedClusterInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name is the cluster name"
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "title": "weight is the cluster weight"
        },
        "metadataMatch": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "metadata_match contains metadata for matching"
        },
        "requestHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "request_headers_to_add contains headers to add to requests"
        },
        "requestHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "request_headers_to_remove contains headers to remove from requests"
        },
        "responseHeadersToAdd": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1alpha1HeaderValueOption"
          },
          "title": "response_headers_to_add contains headers to add to responses"
        },
        "responseHeadersToRemove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "response_headers_to_remove contains headers to remove from responses"
        },
        "hostRewriteSpecifier": {
          "type": "string",
          "title": "host_rewrite_specifier indicates how host rewriting is done"
        }
      },
      "title": "WeightedClusterInfo contains weighted cluster information"
    },
    "v1alpha1ZoneAwareLbConfigInfo": {
      "type": "object",
      "properties": {
        "routingEnabled": {
          "$ref": "#/definitions/v1alpha1FractionInfo",
          "title": "routing_enabled contains routing enabled fraction"
        },
        "minClusterSize": {
          "type": "string",
          "format": "uint64",
          "title": "min_cluster_size is the minimum cluster size"
        }
      },
      "title": "ZoneAwareLbConfigInfo contains zone-aware load balancing configuration information"
    }
  }
}
