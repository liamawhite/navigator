/* generated using openapi-typescript-codegen -- do not edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { v1alpha1CircuitBreakersInfo } from './v1alpha1CircuitBreakersInfo';
import type { v1alpha1ClusterFilterInfo } from './v1alpha1ClusterFilterInfo';
import type { v1alpha1CommonHttpProtocolOptionsInfo } from './v1alpha1CommonHttpProtocolOptionsInfo';
import type { v1alpha1CommonLbConfigInfo } from './v1alpha1CommonLbConfigInfo';
import type { v1alpha1ConfigSourceInfo } from './v1alpha1ConfigSourceInfo';
import type { v1alpha1DnsResolverInfo } from './v1alpha1DnsResolverInfo';
import type { v1alpha1EdsClusterConfigInfo } from './v1alpha1EdsClusterConfigInfo';
import type { v1alpha1EndpointConfigInfo } from './v1alpha1EndpointConfigInfo';
import type { v1alpha1HealthCheckInfo } from './v1alpha1HealthCheckInfo';
import type { v1alpha1HostInfo } from './v1alpha1HostInfo';
import type { v1alpha1LbSubsetConfigInfo } from './v1alpha1LbSubsetConfigInfo';
import type { v1alpha1LeastRequestLbConfigInfo } from './v1alpha1LeastRequestLbConfigInfo';
import type { v1alpha1MaglevLbConfigInfo } from './v1alpha1MaglevLbConfigInfo';
import type { v1alpha1OriginalDstLbConfigInfo } from './v1alpha1OriginalDstLbConfigInfo';
import type { v1alpha1OutlierDetectionInfo } from './v1alpha1OutlierDetectionInfo';
import type { v1alpha1RefreshRateInfo } from './v1alpha1RefreshRateInfo';
import type { v1alpha1RingHashLbConfigInfo } from './v1alpha1RingHashLbConfigInfo';
import type { v1alpha1TLSContextInfo } from './v1alpha1TLSContextInfo';
import type { v1alpha1TransportSocketInfo } from './v1alpha1TransportSocketInfo';
import type { v1alpha1UpstreamBindConfigInfo } from './v1alpha1UpstreamBindConfigInfo';
import type { v1alpha1UpstreamConnectionOptionsInfo } from './v1alpha1UpstreamConnectionOptionsInfo';
export type v1alpha1ClusterSummary = {
    name?: string;
    type?: string;
    connectTimeout?: string;
    loadAssignment?: v1alpha1EndpointConfigInfo;
    loadBalancingPolicy?: string;
    healthChecks?: Array<v1alpha1HealthCheckInfo>;
    maxRequestsPerConnection?: number;
    http2MaxRequests?: number;
    http2MaxRequestsPerConnection?: number;
    http2MaxConcurrentStreams?: number;
    http2InitialStreamWindowSize?: number;
    http2InitialConnectionWindowSize?: number;
    http2MaxFrameSize?: number;
    http2EnableKeepalive?: boolean;
    circuitBreakers?: v1alpha1CircuitBreakersInfo;
    tlsContext?: v1alpha1TLSContextInfo;
    commonHttpProtocolOptions?: v1alpha1CommonHttpProtocolOptionsInfo;
    altStatName?: string;
    perConnectionBufferLimitBytes?: number;
    lbPolicy?: string;
    hosts?: Array<v1alpha1HostInfo>;
    drainConnectionsOnHostRemoval?: boolean;
    warmingHosts?: Array<v1alpha1HostInfo>;
    outlierDetection?: v1alpha1OutlierDetectionInfo;
    cleanupInterval?: string;
    upstreamBindConfig?: v1alpha1UpstreamBindConfigInfo;
    lbSubsetConfig?: v1alpha1LbSubsetConfigInfo;
    ringHashLbConfig?: v1alpha1RingHashLbConfigInfo;
    maglevLbConfig?: v1alpha1MaglevLbConfigInfo;
    originalDstLbConfig?: v1alpha1OriginalDstLbConfigInfo;
    leastRequestLbConfig?: v1alpha1LeastRequestLbConfigInfo;
    commonLbConfig?: v1alpha1CommonLbConfigInfo;
    transportSocket?: v1alpha1TransportSocketInfo;
    protocolSelection?: string;
    upstreamConnectionOptions?: v1alpha1UpstreamConnectionOptionsInfo;
    closeConnectionsOnHostSetChange?: boolean;
    ignoreHealthOnHostRemoval?: boolean;
    filters?: Array<v1alpha1ClusterFilterInfo>;
    lrsServer?: v1alpha1ConfigSourceInfo;
    dnsLookupFamily?: string;
    dnsResolvers?: Array<v1alpha1DnsResolverInfo>;
    useTcpForDnsLookups?: boolean;
    dnsFailureRefreshRate?: v1alpha1RefreshRateInfo;
    respectDnsTtl?: boolean;
    dnsRefreshRate?: string;
    dnsQueryTimeout?: string;
    edsClusterConfig?: v1alpha1EdsClusterConfigInfo;
};

